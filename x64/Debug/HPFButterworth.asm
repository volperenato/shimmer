; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30145.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_7HPFButterworth@@6B@				; HPFButterworth::`vftable'
PUBLIC	??_R2HPFButterworth@@8				; HPFButterworth::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@HPFButterworth@@8			; HPFButterworth::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R4HPFButterworth@@6B@			; HPFButterworth::`RTTI Complete Object Locator'
PUBLIC	??_R3HPFButterworth@@8				; HPFButterworth::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R0?AVHPFButterworth@@@8			; HPFButterworth `RTTI Type Descriptor'
EXTRN	__imp_sqrt:PROC
EXTRN	__imp_tan:PROC
;	COMDAT ??_R0?AVHPFButterworth@@@8
data$rs	SEGMENT
??_R0?AVHPFButterworth@@@8 DQ FLAT:??_7type_info@@6B@	; HPFButterworth `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVHPFButterworth@@', 00H
data$rs	ENDS
;	COMDAT ??_R3HPFButterworth@@8
rdata$r	SEGMENT
??_R3HPFButterworth@@8 DD 00H				; HPFButterworth::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2HPFButterworth@@8
rdata$r	ENDS
;	COMDAT ??_R4HPFButterworth@@6B@
rdata$r	SEGMENT
??_R4HPFButterworth@@6B@ DD 01H				; HPFButterworth::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVHPFButterworth@@@8
	DD	imagerel ??_R3HPFButterworth@@8
	DD	imagerel ??_R4HPFButterworth@@6B@
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@HPFButterworth@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@HPFButterworth@@8 DD imagerel ??_R0?AVHPFButterworth@@@8 ; HPFButterworth::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3HPFButterworth@@8
rdata$r	ENDS
;	COMDAT ??_R2HPFButterworth@@8
rdata$r	SEGMENT
??_R2HPFButterworth@@8 DD imagerel ??_R1A@?0A@EA@HPFButterworth@@8 ; HPFButterworth::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_7HPFButterworth@@6B@
CONST	SEGMENT
??_7HPFButterworth@@6B@ DQ FLAT:??_R4HPFButterworth@@6B@ ; HPFButterworth::`vftable'
	DQ	FLAT:?processAudio@HPFButterworth@@UEAAMM@Z
PUBLIC	?processAudio@HPFButterworth@@UEAAMM@Z		; HPFButterworth::processAudio
PUBLIC	?updateBuffers@HPFButterworth@@QEAAXMM@Z	; HPFButterworth::updateBuffers
PUBLIC	??1HPFButterworth@@QEAA@XZ			; HPFButterworth::~HPFButterworth
;	COMDAT pdata
pdata	SEGMENT
$pdata$?processAudio@HPFButterworth@@UEAAMM@Z DD imagerel $LN6
	DD	imagerel $LN6+113
	DD	imagerel $unwind$?processAudio@HPFButterworth@@UEAAMM@Z
;	COMDAT xdata
xdata	SEGMENT
$unwind$?processAudio@HPFButterworth@@UEAAMM@Z DD 032e01H
	DD	0682eH
	DD	02204H
; Function compile flags: /Ogspy
; File C:\Users\RenatoVolpe\personal\fox-suite-blocks\src\HPFButterworth.cpp
;	COMDAT ??1HPFButterworth@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1HPFButterworth@@QEAA@XZ PROC				; HPFButterworth::~HPFButterworth, COMDAT

; 19   : HPFButterworth::~HPFButterworth() {}

	lea	rax, OFFSET FLAT:??_7HPFButterworth@@6B@
	mov	QWORD PTR [rcx], rax
	ret	0
??1HPFButterworth@@QEAA@XZ ENDP				; HPFButterworth::~HPFButterworth
_TEXT	ENDS
; Function compile flags: /Ogspy
; File C:\Users\RenatoVolpe\personal\fox-suite-blocks\src\HPFButterworth.cpp
;	COMDAT ?updateBuffers@HPFButterworth@@QEAAXMM@Z
_TEXT	SEGMENT
this$ = 8
xn$ = 16
yn$ = 24
?updateBuffers@HPFButterworth@@QEAAXMM@Z PROC		; HPFButterworth::updateBuffers, COMDAT

; 59   : 	hpf_xn_2 = hpf_xn_1;

	mov	eax, DWORD PTR [rcx+36]
	mov	DWORD PTR [rcx+40], eax

; 60   : 	hpf_yn_2 = hpf_yn_1;

	mov	eax, DWORD PTR [rcx+44]

; 61   : 	hpf_xn_1 = xn;
; 62   : 	hpf_yn_1 = yn;

	movss	DWORD PTR [rcx+44], xmm2
	mov	DWORD PTR [rcx+48], eax
	movss	DWORD PTR [rcx+36], xmm1

; 63   : }

	ret	0
?updateBuffers@HPFButterworth@@QEAAXMM@Z ENDP		; HPFButterworth::updateBuffers
_TEXT	ENDS
; Function compile flags: /Ogspy
; File C:\Users\RenatoVolpe\personal\fox-suite-blocks\src\HPFButterworth.cpp
;	COMDAT ?processAudio@HPFButterworth@@UEAAMM@Z
_TEXT	SEGMENT
this$ = 32
xn$ = 40
?processAudio@HPFButterworth@@UEAAMM@Z PROC		; HPFButterworth::processAudio, COMDAT

; 66   : {

$LN6:
	sub	rsp, 24

; 67   : 
; 68   : 	// compute filtered output
; 69   : 	float yn = hpf_a0 * xn + hpf_a1 * hpf_xn_1 + hpf_a2 * hpf_xn_2 - hpf_b1 * hpf_yn_1 - hpf_b2 * hpf_yn_2;

	movss	xmm5, DWORD PTR [rcx+36]
	movaps	xmm0, xmm1
	movss	xmm3, DWORD PTR [rcx+44]
	movaps	xmm4, xmm5
	mulss	xmm4, DWORD PTR [rcx+20]
	movaps	xmm2, xmm3
	mulss	xmm0, DWORD PTR [rcx+16]
	mulss	xmm2, DWORD PTR [rcx+28]
	addss	xmm4, xmm0
	movaps	XMMWORD PTR [rsp], xmm6
	movaps	xmm6, xmm1
	movss	xmm1, DWORD PTR [rcx+24]
	mulss	xmm1, DWORD PTR [rcx+40]

; 61   : 	hpf_xn_1 = xn;

	movss	DWORD PTR [rcx+36], xmm6

; 75   : }

	movaps	xmm6, XMMWORD PTR [rsp]
	addss	xmm4, xmm1

; 59   : 	hpf_xn_2 = hpf_xn_1;

	movss	DWORD PTR [rcx+40], xmm5

; 67   : 
; 68   : 	// compute filtered output
; 69   : 	float yn = hpf_a0 * xn + hpf_a1 * hpf_xn_1 + hpf_a2 * hpf_xn_2 - hpf_b1 * hpf_yn_1 - hpf_b2 * hpf_yn_2;

	movss	xmm1, DWORD PTR [rcx+32]
	mulss	xmm1, DWORD PTR [rcx+48]

; 60   : 	hpf_yn_2 = hpf_yn_1;

	movss	DWORD PTR [rcx+48], xmm3

; 67   : 
; 68   : 	// compute filtered output
; 69   : 	float yn = hpf_a0 * xn + hpf_a1 * hpf_xn_1 + hpf_a2 * hpf_xn_2 - hpf_b1 * hpf_yn_1 - hpf_b2 * hpf_yn_2;

	subss	xmm4, xmm2
	subss	xmm4, xmm1

; 62   : 	hpf_yn_1 = yn;

	movss	DWORD PTR [rcx+44], xmm4

; 70   : 
; 71   : 	// update buffers
; 72   : 	updateBuffers(xn, yn);
; 73   : 
; 74   : 	return yn;

	movaps	xmm0, xmm4

; 75   : }

	add	rsp, 24
	ret	0
?processAudio@HPFButterworth@@UEAAMM@Z ENDP		; HPFButterworth::processAudio
_TEXT	ENDS
END
