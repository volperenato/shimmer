; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30133.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_7CombFilter@@6B@				; CombFilter::`vftable'
PUBLIC	??_R3CombFilter@@8				; CombFilter::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R1A@?0A@EA@CombFilter@@8			; CombFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@Delay@@8				; Delay::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R2CombFilter@@8				; CombFilter::`RTTI Base Class Array'
PUBLIC	??_R3Delay@@8					; Delay::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R4CombFilter@@6B@				; CombFilter::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVDelay@@@8				; Delay `RTTI Type Descriptor'
PUBLIC	??_R2Delay@@8					; Delay::`RTTI Base Class Array'
PUBLIC	??_R0?AVCombFilter@@@8				; CombFilter `RTTI Type Descriptor'
EXTRN	??_7type_info@@6B@:BYTE				; type_info::`vftable'
EXTRN	__imp_pow:PROC
EXTRN	__imp___std_terminate:PROC
EXTRN	__imp_log:PROC
EXTRN	__imp___CxxFrameHandler4:PROC
;	COMDAT ??_R0?AVCombFilter@@@8
data$rs	SEGMENT
??_R0?AVCombFilter@@@8 DQ FLAT:??_7type_info@@6B@	; CombFilter `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVCombFilter@@', 00H
data$rs	ENDS
;	COMDAT ??_R2Delay@@8
rdata$r	SEGMENT
??_R2Delay@@8 DD imagerel ??_R1A@?0A@EA@Delay@@8	; Delay::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R0?AVDelay@@@8
data$rs	SEGMENT
??_R0?AVDelay@@@8 DQ FLAT:??_7type_info@@6B@		; Delay `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVDelay@@', 00H
data$rs	ENDS
;	COMDAT ??_R4CombFilter@@6B@
rdata$r	SEGMENT
??_R4CombFilter@@6B@ DD 01H				; CombFilter::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVCombFilter@@@8
	DD	imagerel ??_R3CombFilter@@8
	DD	imagerel ??_R4CombFilter@@6B@
rdata$r	ENDS
;	COMDAT ??_R3Delay@@8
rdata$r	SEGMENT
??_R3Delay@@8 DD 00H					; Delay::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2Delay@@8
rdata$r	ENDS
;	COMDAT ??_R2CombFilter@@8
rdata$r	SEGMENT
??_R2CombFilter@@8 DD imagerel ??_R1A@?0A@EA@CombFilter@@8 ; CombFilter::`RTTI Base Class Array'
	DD	imagerel ??_R1A@?0A@EA@Delay@@8
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@Delay@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@Delay@@8 DD imagerel ??_R0?AVDelay@@@8	; Delay::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3Delay@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@CombFilter@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@CombFilter@@8 DD imagerel ??_R0?AVCombFilter@@@8 ; CombFilter::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3CombFilter@@8
rdata$r	ENDS
;	COMDAT ??_R3CombFilter@@8
rdata$r	SEGMENT
??_R3CombFilter@@8 DD 00H				; CombFilter::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	imagerel ??_R2CombFilter@@8
rdata$r	ENDS
;	COMDAT ??_7CombFilter@@6B@
CONST	SEGMENT
??_7CombFilter@@6B@ DQ FLAT:??_R4CombFilter@@6B@	; CombFilter::`vftable'
	DQ	FLAT:?init@Delay@@UEAAXMH@Z
	DQ	FLAT:?setSampleRate@Delay@@UEAAXH@Z
	DQ	FLAT:?processAudio@CombFilter@@UEAAMM@Z
CONST	ENDS
PUBLIC	?getFeedback@CombFilter@@QEAAMXZ		; CombFilter::getFeedback
PUBLIC	?processAudio@CombFilter@@UEAAMM@Z		; CombFilter::processAudio
PUBLIC	?setFeedbackFromDecay@CombFilter@@QEAAXM@Z	; CombFilter::setFeedbackFromDecay
PUBLIC	?setFeedback@CombFilter@@QEAAXM@Z		; CombFilter::setFeedback
PUBLIC	??1CombFilter@@QEAA@XZ				; CombFilter::~CombFilter
PUBLIC	??0CombFilter@@QEAA@XZ				; CombFilter::CombFilter
PUBLIC	__real@00000000
PUBLIC	__real@0000000000000000
PUBLIC	__real@38000100
PUBLIC	__real@3916a850
PUBLIC	__real@39800000
PUBLIC	__real@3a000000
PUBLIC	__real@3a83126f
PUBLIC	__real@3d088889
PUBLIC	__real@3d4ccccd
PUBLIC	__real@3dcccccd
PUBLIC	__real@3e4ccccd
PUBLIC	__real@3e800000
PUBLIC	__real@3ecccccd
PUBLIC	__real@3ee4f8b588e368f1
PUBLIC	__real@3f000000
PUBLIC	__real@3f5921fb54442d18
PUBLIC	__real@3f7d70a4
PUBLIC	__real@3f800000
PUBLIC	__real@3fb447c30d306a2b
PUBLIC	__real@3fb5555555555555
PUBLIC	__real@3fb999999999999a
PUBLIC	__real@3fd45f306dc9c883
PUBLIC	__real@3fdaaaaaaaaaaaab
PUBLIC	__real@3fdb1633482be8bc
PUBLIC	__real@3fdd70a3d70a3d71
PUBLIC	__real@3fdfd7dbf487fcb9
PUBLIC	__real@3fe0000000000000
PUBLIC	__real@3fe147ae147ae148
PUBLIC	__real@3fe69fbe76c8b439
PUBLIC	__real@3ff0000000000000
PUBLIC	__real@3ff33333
PUBLIC	__real@3ff921fb54442d18
PUBLIC	__real@40000000
PUBLIC	__real@4000000000000000
PUBLIC	__real@400921fb54442d18
PUBLIC	__real@4010000000000000
PUBLIC	__real@401921fb54442d18
PUBLIC	__real@4024000000000000
PUBLIC	__real@4028000000000000
PUBLIC	__real@4034000000000000
PUBLIC	__real@4038000000000000
PUBLIC	__real@4040000000000000
PUBLIC	__real@4059000000000000
PUBLIC	__real@4069000000000000
PUBLIC	__real@40800000
PUBLIC	__real@40a00000
PUBLIC	__real@40affe0000000000
PUBLIC	__real@40b0000000000000
PUBLIC	__real@40d09a0000000000
PUBLIC	__real@40d3880000000000
PUBLIC	__real@40f00000
PUBLIC	__real@41200000
PUBLIC	__real@416312cfe0000000
PUBLIC	__real@4197d783fc000000
PUBLIC	__real@41a00000
PUBLIC	__real@41f00000
PUBLIC	__real@42200000
PUBLIC	__real@43e0000000000000
PUBLIC	__real@447a0000
PUBLIC	__real@44cccccd
PUBLIC	__real@44fa0000
PUBLIC	__real@45800000
PUBLIC	__real@45d98000
PUBLIC	__real@bccccccd
PUBLIC	__real@bf689374bc6a7efa
PUBLIC	__real@c0000000
PUBLIC	__real@c000000000000000
PUBLIC	__real@c003333333333333
PUBLIC	__real@c01921fb54442d18
PUBLIC	__xmm@00000003000000020000000100000000
PUBLIC	__xmm@39800000398000003980000039800000
PUBLIC	__xmm@3f8000003f8000003f8000003f800000
PUBLIC	__xmm@80000000000000008000000000000000
PUBLIC	__xmm@80000000800000008000000080000000
EXTRN	_CxxThrowException:PROC
EXTRN	__CxxFrameHandler4:PROC
EXTRN	__chkstk:PROC
EXTRN	memset:PROC
EXTRN	__ImageBase:BYTE
EXTRN	_fltused:DWORD
;	COMDAT pdata
pdata	SEGMENT
$pdata$?processAudio@CombFilter@@UEAAMM@Z DD imagerel $LN13
	DD	imagerel $LN13+89
	DD	imagerel $unwind$?processAudio@CombFilter@@UEAAMM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?setFeedbackFromDecay@CombFilter@@QEAAXM@Z DD imagerel $LN6
	DD	imagerel $LN6+95
	DD	imagerel $unwind$?setFeedbackFromDecay@CombFilter@@QEAAXM@Z
pdata	ENDS
CRT$XCU	SEGMENT
?MAX_LPF_FREQUENCY_LOG$initializer$@@3P6AXXZEA DQ FLAT:??__EMAX_LPF_FREQUENCY_LOG@@YAXXZ ; MAX_LPF_FREQUENCY_LOG$initializer$
;	COMDAT __xmm@80000000800000008000000080000000
CONST	SEGMENT
__xmm@80000000800000008000000080000000 DB 00H, 00H, 00H, 080H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 080H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@80000000000000008000000000000000
CONST	SEGMENT
__xmm@80000000000000008000000000000000 DB 00H, 00H, 00H, 00H, 00H, 00H, 00H
	DB	080H, 00H, 00H, 00H, 00H, 00H, 00H, 00H, 080H
CONST	ENDS
;	COMDAT __xmm@3f8000003f8000003f8000003f800000
CONST	SEGMENT
__xmm@3f8000003f8000003f8000003f800000 DB 00H, 00H, 080H, '?', 00H, 00H, 080H
	DB	'?', 00H, 00H, 080H, '?', 00H, 00H, 080H, '?'
CONST	ENDS
;	COMDAT __xmm@39800000398000003980000039800000
CONST	SEGMENT
__xmm@39800000398000003980000039800000 DB 00H, 00H, 080H, '9', 00H, 00H, 080H
	DB	'9', 00H, 00H, 080H, '9', 00H, 00H, 080H, '9'
CONST	ENDS
;	COMDAT __xmm@00000003000000020000000100000000
CONST	SEGMENT
__xmm@00000003000000020000000100000000 DB 00H, 00H, 00H, 00H, 01H, 00H, 00H
	DB	00H, 02H, 00H, 00H, 00H, 03H, 00H, 00H, 00H
CONST	ENDS
;	COMDAT __real@c01921fb54442d18
CONST	SEGMENT
__real@c01921fb54442d18 DQ 0c01921fb54442d18r	; -6.28319
CONST	ENDS
;	COMDAT __real@c003333333333333
CONST	SEGMENT
__real@c003333333333333 DQ 0c003333333333333r	; -2.4
CONST	ENDS
;	COMDAT __real@c000000000000000
CONST	SEGMENT
__real@c000000000000000 DQ 0c000000000000000r	; -2
CONST	ENDS
;	COMDAT __real@c0000000
CONST	SEGMENT
__real@c0000000 DD 0c0000000r			; -2
CONST	ENDS
;	COMDAT __real@bf689374bc6a7efa
CONST	SEGMENT
__real@bf689374bc6a7efa DQ 0bf689374bc6a7efar	; -0.003
CONST	ENDS
;	COMDAT __real@bccccccd
CONST	SEGMENT
__real@bccccccd DD 0bccccccdr			; -0.025
CONST	ENDS
;	COMDAT __real@45d98000
CONST	SEGMENT
__real@45d98000 DD 045d98000r			; 6960
CONST	ENDS
;	COMDAT __real@45800000
CONST	SEGMENT
__real@45800000 DD 045800000r			; 4096
CONST	ENDS
;	COMDAT __real@44fa0000
CONST	SEGMENT
__real@44fa0000 DD 044fa0000r			; 2000
CONST	ENDS
;	COMDAT __real@44cccccd
CONST	SEGMENT
__real@44cccccd DD 044cccccdr			; 1638.4
CONST	ENDS
;	COMDAT __real@447a0000
CONST	SEGMENT
__real@447a0000 DD 0447a0000r			; 1000
CONST	ENDS
;	COMDAT __real@43e0000000000000
CONST	SEGMENT
__real@43e0000000000000 DQ 043e0000000000000r	; 9.22337e+18
CONST	ENDS
;	COMDAT __real@42200000
CONST	SEGMENT
__real@42200000 DD 042200000r			; 40
CONST	ENDS
;	COMDAT __real@41f00000
CONST	SEGMENT
__real@41f00000 DD 041f00000r			; 30
CONST	ENDS
;	COMDAT __real@41a00000
CONST	SEGMENT
__real@41a00000 DD 041a00000r			; 20
CONST	ENDS
;	COMDAT __real@4197d783fc000000
CONST	SEGMENT
__real@4197d783fc000000 DQ 04197d783fc000000r	; 1e+08
CONST	ENDS
;	COMDAT __real@416312cfe0000000
CONST	SEGMENT
__real@416312cfe0000000 DQ 0416312cfe0000000r	; 1e+07
CONST	ENDS
;	COMDAT __real@41200000
CONST	SEGMENT
__real@41200000 DD 041200000r			; 10
CONST	ENDS
;	COMDAT __real@40f00000
CONST	SEGMENT
__real@40f00000 DD 040f00000r			; 7.5
CONST	ENDS
;	COMDAT __real@40d3880000000000
CONST	SEGMENT
__real@40d3880000000000 DQ 040d3880000000000r	; 20000
CONST	ENDS
;	COMDAT __real@40d09a0000000000
CONST	SEGMENT
__real@40d09a0000000000 DQ 040d09a0000000000r	; 17000
CONST	ENDS
;	COMDAT __real@40b0000000000000
CONST	SEGMENT
__real@40b0000000000000 DQ 040b0000000000000r	; 4096
CONST	ENDS
;	COMDAT __real@40affe0000000000
CONST	SEGMENT
__real@40affe0000000000 DQ 040affe0000000000r	; 4095
CONST	ENDS
;	COMDAT __real@40a00000
CONST	SEGMENT
__real@40a00000 DD 040a00000r			; 5
CONST	ENDS
;	COMDAT __real@40800000
CONST	SEGMENT
__real@40800000 DD 040800000r			; 4
CONST	ENDS
;	COMDAT __real@4069000000000000
CONST	SEGMENT
__real@4069000000000000 DQ 04069000000000000r	; 200
CONST	ENDS
;	COMDAT __real@4059000000000000
CONST	SEGMENT
__real@4059000000000000 DQ 04059000000000000r	; 100
CONST	ENDS
;	COMDAT __real@4040000000000000
CONST	SEGMENT
__real@4040000000000000 DQ 04040000000000000r	; 32
CONST	ENDS
;	COMDAT __real@4038000000000000
CONST	SEGMENT
__real@4038000000000000 DQ 04038000000000000r	; 24
CONST	ENDS
;	COMDAT __real@4034000000000000
CONST	SEGMENT
__real@4034000000000000 DQ 04034000000000000r	; 20
CONST	ENDS
;	COMDAT __real@4028000000000000
CONST	SEGMENT
__real@4028000000000000 DQ 04028000000000000r	; 12
CONST	ENDS
;	COMDAT __real@4024000000000000
CONST	SEGMENT
__real@4024000000000000 DQ 04024000000000000r	; 10
CONST	ENDS
;	COMDAT __real@401921fb54442d18
CONST	SEGMENT
__real@401921fb54442d18 DQ 0401921fb54442d18r	; 6.28319
CONST	ENDS
;	COMDAT __real@4010000000000000
CONST	SEGMENT
__real@4010000000000000 DQ 04010000000000000r	; 4
CONST	ENDS
;	COMDAT __real@400921fb54442d18
CONST	SEGMENT
__real@400921fb54442d18 DQ 0400921fb54442d18r	; 3.14159
CONST	ENDS
;	COMDAT __real@4000000000000000
CONST	SEGMENT
__real@4000000000000000 DQ 04000000000000000r	; 2
CONST	ENDS
;	COMDAT __real@40000000
CONST	SEGMENT
__real@40000000 DD 040000000r			; 2
CONST	ENDS
;	COMDAT __real@3ff921fb54442d18
CONST	SEGMENT
__real@3ff921fb54442d18 DQ 03ff921fb54442d18r	; 1.5708
CONST	ENDS
;	COMDAT __real@3ff33333
CONST	SEGMENT
__real@3ff33333 DD 03ff33333r			; 1.9
CONST	ENDS
;	COMDAT __real@3ff0000000000000
CONST	SEGMENT
__real@3ff0000000000000 DQ 03ff0000000000000r	; 1
CONST	ENDS
;	COMDAT __real@3fe69fbe76c8b439
CONST	SEGMENT
__real@3fe69fbe76c8b439 DQ 03fe69fbe76c8b439r	; 0.707
CONST	ENDS
;	COMDAT __real@3fe147ae147ae148
CONST	SEGMENT
__real@3fe147ae147ae148 DQ 03fe147ae147ae148r	; 0.54
CONST	ENDS
;	COMDAT __real@3fe0000000000000
CONST	SEGMENT
__real@3fe0000000000000 DQ 03fe0000000000000r	; 0.5
CONST	ENDS
;	COMDAT __real@3fdfd7dbf487fcb9
CONST	SEGMENT
__real@3fdfd7dbf487fcb9 DQ 03fdfd7dbf487fcb9r	; 0.49755
CONST	ENDS
;	COMDAT __real@3fdd70a3d70a3d71
CONST	SEGMENT
__real@3fdd70a3d70a3d71 DQ 03fdd70a3d70a3d71r	; 0.46
CONST	ENDS
;	COMDAT __real@3fdb1633482be8bc
CONST	SEGMENT
__real@3fdb1633482be8bc DQ 03fdb1633482be8bcr	; 0.42323
CONST	ENDS
;	COMDAT __real@3fdaaaaaaaaaaaab
CONST	SEGMENT
__real@3fdaaaaaaaaaaaab DQ 03fdaaaaaaaaaaaabr	; 0.416667
CONST	ENDS
;	COMDAT __real@3fd45f306dc9c883
CONST	SEGMENT
__real@3fd45f306dc9c883 DQ 03fd45f306dc9c883r	; 0.31831
CONST	ENDS
;	COMDAT __real@3fb999999999999a
CONST	SEGMENT
__real@3fb999999999999a DQ 03fb999999999999ar	; 0.1
CONST	ENDS
;	COMDAT __real@3fb5555555555555
CONST	SEGMENT
__real@3fb5555555555555 DQ 03fb5555555555555r	; 0.0833333
CONST	ENDS
;	COMDAT __real@3fb447c30d306a2b
CONST	SEGMENT
__real@3fb447c30d306a2b DQ 03fb447c30d306a2br	; 0.07922
CONST	ENDS
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
CONST	ENDS
;	COMDAT __real@3f7d70a4
CONST	SEGMENT
__real@3f7d70a4 DD 03f7d70a4r			; 0.99
CONST	ENDS
;	COMDAT __real@3f5921fb54442d18
CONST	SEGMENT
__real@3f5921fb54442d18 DQ 03f5921fb54442d18r	; 0.00153398
CONST	ENDS
;	COMDAT __real@3f000000
CONST	SEGMENT
__real@3f000000 DD 03f000000r			; 0.5
CONST	ENDS
;	COMDAT __real@3ee4f8b588e368f1
CONST	SEGMENT
__real@3ee4f8b588e368f1 DQ 03ee4f8b588e368f1r	; 1e-05
CONST	ENDS
;	COMDAT __real@3ecccccd
CONST	SEGMENT
__real@3ecccccd DD 03ecccccdr			; 0.4
CONST	ENDS
;	COMDAT __real@3e800000
CONST	SEGMENT
__real@3e800000 DD 03e800000r			; 0.25
CONST	ENDS
;	COMDAT __real@3e4ccccd
CONST	SEGMENT
__real@3e4ccccd DD 03e4ccccdr			; 0.2
CONST	ENDS
;	COMDAT __real@3dcccccd
CONST	SEGMENT
__real@3dcccccd DD 03dcccccdr			; 0.1
CONST	ENDS
;	COMDAT __real@3d4ccccd
CONST	SEGMENT
__real@3d4ccccd DD 03d4ccccdr			; 0.05
CONST	ENDS
;	COMDAT __real@3d088889
CONST	SEGMENT
__real@3d088889 DD 03d088889r			; 0.0333333
CONST	ENDS
;	COMDAT __real@3a83126f
CONST	SEGMENT
__real@3a83126f DD 03a83126fr			; 0.001
CONST	ENDS
;	COMDAT __real@3a000000
CONST	SEGMENT
__real@3a000000 DD 03a000000r			; 0.000488281
CONST	ENDS
;	COMDAT __real@39800000
CONST	SEGMENT
__real@39800000 DD 039800000r			; 0.000244141
CONST	ENDS
;	COMDAT __real@3916a850
CONST	SEGMENT
__real@3916a850 DD 03916a850r			; 0.000143678
CONST	ENDS
;	COMDAT __real@38000100
CONST	SEGMENT
__real@38000100 DD 038000100r			; 3.05185e-05
CONST	ENDS
;	COMDAT __real@0000000000000000
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
CONST	ENDS
;	COMDAT __real@00000000
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
CONST	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?setFeedbackFromDecay@CombFilter@@QEAAXM@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?processAudio@CombFilter@@UEAAMM@Z DD 010401H
	DD	04204H
xdata	ENDS
CRT$XCU	SEGMENT
?MIN_LPF_FREQUENCY_LOG$initializer$@@3P6AXXZEA DQ FLAT:??__EMIN_LPF_FREQUENCY_LOG@@YAXXZ ; MIN_LPF_FREQUENCY_LOG$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?MAX_HPF_FREQUENCY_LOG$initializer$@@3P6AXXZEA DQ FLAT:??__EMAX_HPF_FREQUENCY_LOG@@YAXXZ ; MAX_HPF_FREQUENCY_LOG$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?MIN_HPF_FREQUENCY_LOG$initializer$@@3P6AXXZEA DQ FLAT:??__EMIN_HPF_FREQUENCY_LOG@@YAXXZ ; MIN_HPF_FREQUENCY_LOG$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?MAX_FREQUENCY_LOG$initializer$@@3P6AXXZEA DQ FLAT:??__EMAX_FREQUENCY_LOG@@YAXXZ ; MAX_FREQUENCY_LOG$initializer$
CRT$XCU	ENDS
CRT$XCU	SEGMENT
?MIN_FREQUENCY_LOG$initializer$@@3P6AXXZEA DQ FLAT:??__EMIN_FREQUENCY_LOG@@YAXXZ ; MIN_FREQUENCY_LOG$initializer$
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
CRT$XCU	ENDS
; Function compile flags: /Ogspy
; File E:\prova\Shimmer\include\constants.h
;	COMDAT ??__EMAX_LPF_FREQUENCY_LOG@@YAXXZ
text$di	SEGMENT
??__EMAX_LPF_FREQUENCY_LOG@@YAXXZ PROC			; `dynamic initializer for 'MAX_LPF_FREQUENCY_LOG'', COMDAT

; 15   : const float MAX_LPF_FREQUENCY_LOG = log(MAX_LPF_FREQUENCY);

	movsd	xmm0, QWORD PTR __real@40d3880000000000
	rex_jmp	QWORD PTR __imp_log
??__EMAX_LPF_FREQUENCY_LOG@@YAXXZ ENDP			; `dynamic initializer for 'MAX_LPF_FREQUENCY_LOG''
text$di	ENDS
; Function compile flags: /Ogspy
; File E:\prova\Shimmer\include\constants.h
;	COMDAT ??__EMIN_LPF_FREQUENCY_LOG@@YAXXZ
text$di	SEGMENT
??__EMIN_LPF_FREQUENCY_LOG@@YAXXZ PROC			; `dynamic initializer for 'MIN_LPF_FREQUENCY_LOG'', COMDAT

; 16   : const float MIN_LPF_FREQUENCY_LOG = log(MIN_LPF_FREQUENCY);

	movsd	xmm0, QWORD PTR __real@4034000000000000
	rex_jmp	QWORD PTR __imp_log
??__EMIN_LPF_FREQUENCY_LOG@@YAXXZ ENDP			; `dynamic initializer for 'MIN_LPF_FREQUENCY_LOG''
text$di	ENDS
; Function compile flags: /Ogspy
; File E:\prova\Shimmer\include\constants.h
;	COMDAT ??__EMAX_HPF_FREQUENCY_LOG@@YAXXZ
text$di	SEGMENT
??__EMAX_HPF_FREQUENCY_LOG@@YAXXZ PROC			; `dynamic initializer for 'MAX_HPF_FREQUENCY_LOG'', COMDAT

; 17   : const float MAX_HPF_FREQUENCY_LOG = log(MAX_HPF_FREQUENCY);

	movsd	xmm0, QWORD PTR __real@40d09a0000000000
	rex_jmp	QWORD PTR __imp_log
??__EMAX_HPF_FREQUENCY_LOG@@YAXXZ ENDP			; `dynamic initializer for 'MAX_HPF_FREQUENCY_LOG''
text$di	ENDS
; Function compile flags: /Ogspy
; File E:\prova\Shimmer\include\constants.h
;	COMDAT ??__EMIN_HPF_FREQUENCY_LOG@@YAXXZ
text$di	SEGMENT
??__EMIN_HPF_FREQUENCY_LOG@@YAXXZ PROC			; `dynamic initializer for 'MIN_HPF_FREQUENCY_LOG'', COMDAT

; 18   : const float MIN_HPF_FREQUENCY_LOG = log(MIN_HPF_FREQUENCY);

	movsd	xmm0, QWORD PTR __real@4034000000000000
	rex_jmp	QWORD PTR __imp_log
??__EMIN_HPF_FREQUENCY_LOG@@YAXXZ ENDP			; `dynamic initializer for 'MIN_HPF_FREQUENCY_LOG''
text$di	ENDS
; Function compile flags: /Ogspy
; File E:\prova\Shimmer\include\constants.h
;	COMDAT ??__EMAX_FREQUENCY_LOG@@YAXXZ
text$di	SEGMENT
??__EMAX_FREQUENCY_LOG@@YAXXZ PROC			; `dynamic initializer for 'MAX_FREQUENCY_LOG'', COMDAT

; 19   : const float MAX_FREQUENCY_LOG = log(MAX_FREQUENCY);

	movsd	xmm0, QWORD PTR __real@40d3880000000000
	rex_jmp	QWORD PTR __imp_log
??__EMAX_FREQUENCY_LOG@@YAXXZ ENDP			; `dynamic initializer for 'MAX_FREQUENCY_LOG''
text$di	ENDS
; Function compile flags: /Ogspy
; File E:\prova\Shimmer\include\constants.h
;	COMDAT ??__EMIN_FREQUENCY_LOG@@YAXXZ
text$di	SEGMENT
??__EMIN_FREQUENCY_LOG@@YAXXZ PROC			; `dynamic initializer for 'MIN_FREQUENCY_LOG'', COMDAT

; 20   : const float MIN_FREQUENCY_LOG = log(MIN_FREQUENCY);

	movsd	xmm0, QWORD PTR __real@4024000000000000
	rex_jmp	QWORD PTR __imp_log
??__EMIN_FREQUENCY_LOG@@YAXXZ ENDP			; `dynamic initializer for 'MIN_FREQUENCY_LOG''
text$di	ENDS
; Function compile flags: /Ogspy
; File E:\prova\Shimmer\include\src\CombFilter.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File E:\FoxSuite\fox-suite-blocks\src\Delay.cpp
; File E:\prova\Shimmer\include\src\CombFilter.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File E:\prova\Shimmer\include\src\CombFilter.cpp
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector
; File E:\FoxSuite\fox-suite-blocks\src\Delay.cpp
; File E:\prova\Shimmer\include\src\CombFilter.cpp
;	COMDAT ??0CombFilter@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??0CombFilter@@QEAA@XZ PROC				; CombFilter::CombFilter, COMDAT
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	xor	edx, edx
; File E:\FoxSuite\fox-suite-blocks\src\Delay.cpp

; 11   : 	dly_makeUpGain			= 1.0;

	mov	QWORD PTR [rcx+68], 1065353216		; 3f800000H
; File E:\prova\Shimmer\include\src\CombFilter.cpp

; 6    : CombFilter::CombFilter() : Delay() {

	lea	rax, OFFSET FLAT:??_7CombFilter@@6B@
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rcx+40], rdx
; File E:\prova\Shimmer\include\src\CombFilter.cpp

; 6    : CombFilter::CombFilter() : Delay() {

	mov	QWORD PTR [rcx], rax

; 10   : }

	mov	rax, rcx
; File C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Tools\MSVC\14.29.30133\include\vector

; 401  :     _CONSTEXPR20_CONTAINER _Vector_val() noexcept : _Myfirst(), _Mylast(), _Myend() {}

	mov	QWORD PTR [rcx+48], rdx
	mov	QWORD PTR [rcx+56], rdx
; File E:\FoxSuite\fox-suite-blocks\src\Delay.cpp

; 10   : 	dly_makeUpGaindB		= 0.0;

	mov	DWORD PTR [rcx+64], edx

; 12   : 	dly_delayInmsec			= 0.0;
; 13   : 	dly_delayInSamples		= 0.0;

	mov	QWORD PTR [rcx+20], rdx

; 14   : 	dly_readIndex			= 0;

	mov	QWORD PTR [rcx+28], rdx

; 15   : 	dly_writeIndex			= 0;
; 16   : 	dly_lineLengthInSamples = 0;

	mov	QWORD PTR [rcx+12], rdx

; 17   : 	dly_lineLengthInmsec	= 0.0;
; 18   : 	dly_sampleRate			= _TEMPLATE_SAMPLERATE;

	mov	DWORD PTR [rcx+8], 44100		; 0000ac44H
; File E:\prova\Shimmer\include\src\CombFilter.cpp

; 8    : 	cf_decayInSeconds   = 0.0;

	mov	DWORD PTR [rcx+76], edx

; 9    : 	cf_feedbackGainSign = 1;

	mov	DWORD PTR [rcx+80], 1

; 10   : }

	ret	0
??0CombFilter@@QEAA@XZ ENDP				; CombFilter::CombFilter
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\prova\Shimmer\include\src\CombFilter.cpp
;	COMDAT ??1CombFilter@@QEAA@XZ
_TEXT	SEGMENT
this$ = 8
??1CombFilter@@QEAA@XZ PROC				; CombFilter::~CombFilter, COMDAT

; 13   : CombFilter::~CombFilter() {}

	lea	rax, OFFSET FLAT:??_7CombFilter@@6B@
	mov	QWORD PTR [rcx], rax
	jmp	??1Delay@@QEAA@XZ			; Delay::~Delay
??1CombFilter@@QEAA@XZ ENDP				; CombFilter::~CombFilter
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\prova\Shimmer\include\src\CombFilter.cpp
;	COMDAT ?setFeedback@CombFilter@@QEAAXM@Z
_TEXT	SEGMENT
this$ = 8
g$ = 16
?setFeedback@CombFilter@@QEAAXM@Z PROC			; CombFilter::setFeedback, COMDAT

; 16   : 	cf_feedbackGain = g;

	movss	DWORD PTR [rcx+72], xmm1

; 17   : }

	ret	0
?setFeedback@CombFilter@@QEAAXM@Z ENDP			; CombFilter::setFeedback
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\prova\Shimmer\include\src\CombFilter.cpp
;	COMDAT ?setFeedbackFromDecay@CombFilter@@QEAAXM@Z
_TEXT	SEGMENT
this$ = 48
decayInSeconds$ = 56
?setFeedbackFromDecay@CombFilter@@QEAAXM@Z PROC		; CombFilter::setFeedbackFromDecay, COMDAT

; 19   : void CombFilter::setFeedbackFromDecay(float decayInSeconds) {

$LN6:
	push	rbx
	sub	rsp, 32					; 00000020H

; 20   : 	// set decay
; 21   : 	cf_decayInSeconds = decayInSeconds;
; 22   : 	
; 23   : 	// compute comb filter gain module according to given decay value (in seconds)
; 24   : 	float feedbackModule = (cf_decayInSeconds > 0.0) ? pow(10, -3.0 * dly_delayInmsec / (cf_decayInSeconds * 1000.0)) : 0.0;

	comiss	xmm1, DWORD PTR __real@00000000
	mov	rbx, rcx
	movss	DWORD PTR [rcx+76], xmm1
	xorps	xmm0, xmm0
	jbe	SHORT $LN4@setFeedbac
	movss	xmm2, DWORD PTR [rcx+24]
	cvtss2sd xmm0, xmm1
	movsd	xmm1, QWORD PTR __real@bf689374bc6a7efa
	divsd	xmm1, xmm0
	movsd	xmm0, QWORD PTR __real@4024000000000000
	cvtps2pd xmm2, xmm2
	mulsd	xmm1, xmm2
	call	QWORD PTR __imp_pow
$LN4@setFeedbac:

; 25   : 
; 26   : 	// allocate comb filter gain value retaining its sign
; 27   : 	cf_feedbackGain = cf_feedbackGainSign * feedbackModule;

	movd	xmm1, DWORD PTR [rbx+80]
	cvtdq2ps xmm1, xmm1
	cvtsd2ss xmm0, xmm0
	mulss	xmm1, xmm0
	movss	DWORD PTR [rbx+72], xmm1

; 28   : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?setFeedbackFromDecay@CombFilter@@QEAAXM@Z ENDP		; CombFilter::setFeedbackFromDecay
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\prova\Shimmer\include\src\CombFilter.cpp
; File E:\FoxSuite\fox-suite-blocks\src\Delay.cpp
; File E:\prova\Shimmer\include\src\CombFilter.cpp
; File E:\FoxSuite\fox-suite-blocks\src\Delay.cpp
; File E:\prova\Shimmer\include\src\CombFilter.cpp
; File E:\FoxSuite\fox-suite-blocks\src\Delay.cpp
; File E:\prova\Shimmer\include\src\CombFilter.cpp
; File E:\FoxSuite\fox-suite-blocks\src\Delay.cpp
; File E:\prova\Shimmer\include\src\CombFilter.cpp
;	COMDAT ?processAudio@CombFilter@@UEAAMM@Z
_TEXT	SEGMENT
this$ = 48
xn$ = 56
?processAudio@CombFilter@@UEAAMM@Z PROC			; CombFilter::processAudio, COMDAT

; 30   : float CombFilter::processAudio(float xn) {

$LN13:
	sub	rsp, 40					; 00000028H
	movaps	xmm4, xmm1
	mov	r9, rcx

; 31   : 	// Extract value from delay buffer
; 32   : 	float yn = readFromDelayLine();

	call	?readFromDelayLine@Delay@@QEAAMXZ	; Delay::readFromDelayLine
; File E:\FoxSuite\fox-suite-blocks\src\Delay.cpp

; 168  : 	dly_buffer[dly_writeIndex] = xn;

	movsxd	rdx, DWORD PTR [r9+32]
; File E:\prova\Shimmer\include\src\CombFilter.cpp

; 35   : 	float buff = xn + cf_feedbackGain * yn;

	movaps	xmm3, xmm0
	mulss	xmm3, DWORD PTR [r9+72]
; File E:\FoxSuite\fox-suite-blocks\src\Delay.cpp

; 168  : 	dly_buffer[dly_writeIndex] = xn;

	mov	rax, QWORD PTR [r9+40]
; File E:\prova\Shimmer\include\src\CombFilter.cpp

; 35   : 	float buff = xn + cf_feedbackGain * yn;

	addss	xmm3, xmm4
; File E:\FoxSuite\fox-suite-blocks\src\Delay.cpp

; 168  : 	dly_buffer[dly_writeIndex] = xn;

	movss	DWORD PTR [rax+rdx*4], xmm3

; 155  : 	if (dly_readIndex >= dly_lineLengthInSamples)

	xor	edx, edx
	inc	DWORD PTR [r9+28]
	mov	ecx, DWORD PTR [r9+12]
	cmp	DWORD PTR [r9+28], ecx
	jl	SHORT $LN8@processAud

; 156  : 		dly_readIndex = 0;

	mov	DWORD PTR [r9+28], edx
$LN8@processAud:

; 157  : 
; 158  : 	// Increase writing index
; 159  : 	dly_writeIndex++;

	inc	DWORD PTR [r9+32]

; 162  : 	if (dly_writeIndex >= dly_lineLengthInSamples)

	mov	eax, DWORD PTR [r9+32]
	cmp	eax, ecx
; File E:\prova\Shimmer\include\src\CombFilter.cpp

; 44   : 	return yn * dly_makeUpGain;

	mulss	xmm0, DWORD PTR [r9+68]
; File E:\FoxSuite\fox-suite-blocks\src\Delay.cpp

; 162  : 	if (dly_writeIndex >= dly_lineLengthInSamples)

	cmovge	eax, edx
	mov	DWORD PTR [r9+32], eax
; File E:\prova\Shimmer\include\src\CombFilter.cpp

; 45   : }

	add	rsp, 40					; 00000028H
	ret	0
?processAudio@CombFilter@@UEAAMM@Z ENDP			; CombFilter::processAudio
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\prova\Shimmer\include\src\CombFilter.cpp
;	COMDAT ?getFeedback@CombFilter@@QEAAMXZ
_TEXT	SEGMENT
this$ = 8
?getFeedback@CombFilter@@QEAAMXZ PROC			; CombFilter::getFeedback, COMDAT

; 56   : 	return cf_feedbackGain;

	movss	xmm0, DWORD PTR [rcx+72]

; 57   : }

	ret	0
?getFeedback@CombFilter@@QEAAMXZ ENDP			; CombFilter::getFeedback
_TEXT	ENDS
END
