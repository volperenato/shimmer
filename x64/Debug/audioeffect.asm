; Listing generated by Microsoft (R) Optimizing Compiler Version 19.29.30133.0 

include listing.inc

INCLUDELIB OLDNAMES

PUBLIC	??_C@_00CNPNBAHC@@				; `string'
PUBLIC	??_C@_03CNANKMHF@?9oo@				; `string'
PUBLIC	??_C@_05PIHGGKHA@Huge?$CB@			; `string'
PUBLIC	??_C@_01JOAMLHOP@?9@				; `string'
PUBLIC	??_7AudioEffect@@6B@				; AudioEffect::`vftable'
PUBLIC	??_R1A@?0A@EA@AudioEffect@@8			; AudioEffect::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVAudioEffect@@@8				; AudioEffect `RTTI Type Descriptor'
PUBLIC	??_R4AudioEffect@@6B@				; AudioEffect::`RTTI Complete Object Locator'
PUBLIC	??_R2AudioEffect@@8				; AudioEffect::`RTTI Base Class Array'
PUBLIC	??_R3AudioEffect@@8				; AudioEffect::`RTTI Class Hierarchy Descriptor'
EXTRN	_purecall:PROC
EXTRN	__imp_strncat:PROC
EXTRN	__imp_strncpy:PROC
EXTRN	__imp_fmod:PROC
EXTRN	__imp__purecall:PROC
EXTRN	__imp_floor:PROC
;	COMDAT ??_R3AudioEffect@@8
rdata$r	SEGMENT
??_R3AudioEffect@@8 DD 00H				; AudioEffect::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	imagerel ??_R2AudioEffect@@8
rdata$r	ENDS
;	COMDAT ??_R2AudioEffect@@8
rdata$r	SEGMENT
??_R2AudioEffect@@8 DD imagerel ??_R1A@?0A@EA@AudioEffect@@8 ; AudioEffect::`RTTI Base Class Array'
	ORG $+3
rdata$r	ENDS
;	COMDAT ??_R4AudioEffect@@6B@
rdata$r	SEGMENT
??_R4AudioEffect@@6B@ DD 01H				; AudioEffect::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	imagerel ??_R0?AVAudioEffect@@@8
	DD	imagerel ??_R3AudioEffect@@8
	DD	imagerel ??_R4AudioEffect@@6B@
rdata$r	ENDS
;	COMDAT ??_R0?AVAudioEffect@@@8
data$rs	SEGMENT
??_R0?AVAudioEffect@@@8 DQ FLAT:??_7type_info@@6B@	; AudioEffect `RTTI Type Descriptor'
	DQ	0000000000000000H
	DB	'.?AVAudioEffect@@', 00H
data$rs	ENDS
;	COMDAT ??_R1A@?0A@EA@AudioEffect@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@AudioEffect@@8 DD imagerel ??_R0?AVAudioEffect@@@8 ; AudioEffect::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	imagerel ??_R3AudioEffect@@8
rdata$r	ENDS
;	COMDAT ??_7AudioEffect@@6B@
CONST	SEGMENT
??_7AudioEffect@@6B@ DQ FLAT:??_R4AudioEffect@@6B@	; AudioEffect::`vftable'
	DQ	FLAT:??_EAudioEffect@@UEAAPEAXI@Z
	DQ	FLAT:?dispatcher@AudioEffect@@UEAA_JHH_JPEAXM@Z
	DQ	FLAT:?open@AudioEffect@@UEAAXXZ
	DQ	FLAT:?close@AudioEffect@@UEAAXXZ
	DQ	FLAT:?suspend@AudioEffect@@UEAAXXZ
	DQ	FLAT:?resume@AudioEffect@@UEAAXXZ
	DQ	FLAT:?setSampleRate@AudioEffect@@UEAAXM@Z
	DQ	FLAT:?setBlockSize@AudioEffect@@UEAAXH@Z
	DQ	FLAT:_purecall
	DQ	FLAT:?processDoubleReplacing@AudioEffect@@UEAAXPEAPEAN0H@Z
	DQ	FLAT:?setParameter@AudioEffect@@UEAAXHM@Z
	DQ	FLAT:?getParameter@AudioEffect@@UEAAMH@Z
	DQ	FLAT:?setParameterAutomated@AudioEffect@@UEAAXHM@Z
	DQ	FLAT:?getProgram@AudioEffect@@UEAAHXZ
	DQ	FLAT:?setProgram@AudioEffect@@UEAAXH@Z
	DQ	FLAT:?setProgramName@AudioEffect@@UEAAXPEAD@Z
	DQ	FLAT:?getProgramName@AudioEffect@@UEAAXPEAD@Z
	DQ	FLAT:?getParameterLabel@AudioEffect@@UEAAXHPEAD@Z
	DQ	FLAT:?getParameterDisplay@AudioEffect@@UEAAXHPEAD@Z
	DQ	FLAT:?getParameterName@AudioEffect@@UEAAXHPEAD@Z
	DQ	FLAT:?getChunk@AudioEffect@@UEAAHPEAPEAX_N@Z
	DQ	FLAT:?setChunk@AudioEffect@@UEAAHPEAXH_N@Z
	DQ	FLAT:?setUniqueID@AudioEffect@@UEAAXH@Z
	DQ	FLAT:?setNumInputs@AudioEffect@@UEAAXH@Z
	DQ	FLAT:?setNumOutputs@AudioEffect@@UEAAXH@Z
	DQ	FLAT:?canProcessReplacing@AudioEffect@@UEAAX_N@Z
	DQ	FLAT:?canDoubleReplacing@AudioEffect@@UEAAX_N@Z
	DQ	FLAT:?programsAreChunks@AudioEffect@@UEAAX_N@Z
	DQ	FLAT:?setInitialDelay@AudioEffect@@UEAAXH@Z
	DQ	FLAT:?getEditor@AudioEffect@@UEAAPEAVAEffEditor@@XZ
	DQ	FLAT:?getAeffect@AudioEffect@@UEAAPEAUAEffect@@XZ
	DQ	FLAT:?getSampleRate@AudioEffect@@UEAAMXZ
	DQ	FLAT:?getBlockSize@AudioEffect@@UEAAHXZ
	DQ	FLAT:?getMasterVersion@AudioEffect@@UEAAHXZ
	DQ	FLAT:?getCurrentUniqueId@AudioEffect@@UEAAHXZ
	DQ	FLAT:?masterIdle@AudioEffect@@UEAAXXZ
	DQ	FLAT:?dB2string@AudioEffect@@UEAAXMPEADH@Z
	DQ	FLAT:?Hz2string@AudioEffect@@UEAAXMPEADH@Z
	DQ	FLAT:?ms2string@AudioEffect@@UEAAXMPEADH@Z
	DQ	FLAT:?float2string@AudioEffect@@UEAAXMPEADH@Z
	DQ	FLAT:?int2string@AudioEffect@@UEAAXHPEADH@Z
	DQ	FLAT:?__processDeprecated@AudioEffect@@UEAAXPEAPEAM0H@Z
	DQ	FLAT:?__getVuDeprecated@AudioEffect@@UEAAMXZ
	DQ	FLAT:?__hasVuDeprecated@AudioEffect@@UEAAX_N@Z
	DQ	FLAT:?__hasClipDeprecated@AudioEffect@@UEAAX_N@Z
	DQ	FLAT:?__canMonoDeprecated@AudioEffect@@UEAAX_N@Z
	DQ	FLAT:?__setRealtimeQualitiesDeprecated@AudioEffect@@UEAAXH@Z
	DQ	FLAT:?__setOfflineQualitiesDeprecated@AudioEffect@@UEAAXH@Z
	DQ	FLAT:?__isInputConnectedDeprecated@AudioEffect@@UEAA_NH@Z
	DQ	FLAT:?__isOutputConnectedDeprecated@AudioEffect@@UEAA_NH@Z
CONST	ENDS
;	COMDAT ??_C@_01JOAMLHOP@?9@
CONST	SEGMENT
??_C@_01JOAMLHOP@?9@ DB '-', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_05PIHGGKHA@Huge?$CB@
CONST	SEGMENT
??_C@_05PIHGGKHA@Huge?$CB@ DB 'Huge!', 00H		; `string'
CONST	ENDS
;	COMDAT ??_C@_03CNANKMHF@?9oo@
CONST	SEGMENT
??_C@_03CNANKMHF@?9oo@ DB '-oo', 00H			; `string'
CONST	ENDS
;	COMDAT ??_C@_00CNPNBAHC@@
CONST	SEGMENT
??_C@_00CNPNBAHC@@ DB 00H				; `string'
PUBLIC	?int2string@AudioEffect@@UEAAXHPEADH@Z		; AudioEffect::int2string
PUBLIC	?float2string@AudioEffect@@UEAAXMPEADH@Z	; AudioEffect::float2string
PUBLIC	?ms2string@AudioEffect@@UEAAXMPEADH@Z		; AudioEffect::ms2string
PUBLIC	?Hz2string@AudioEffect@@UEAAXMPEADH@Z		; AudioEffect::Hz2string
PUBLIC	?dB2string@AudioEffect@@UEAAXMPEADH@Z		; AudioEffect::dB2string
PUBLIC	?setInitialDelay@AudioEffect@@UEAAXH@Z		; AudioEffect::setInitialDelay
PUBLIC	?__setOfflineQualitiesDeprecated@AudioEffect@@UEAAXH@Z ; AudioEffect::__setOfflineQualitiesDeprecated
PUBLIC	?__setRealtimeQualitiesDeprecated@AudioEffect@@UEAAXH@Z ; AudioEffect::__setRealtimeQualitiesDeprecated
PUBLIC	?programsAreChunks@AudioEffect@@UEAAX_N@Z	; AudioEffect::programsAreChunks
PUBLIC	?canDoubleReplacing@AudioEffect@@UEAAX_N@Z	; AudioEffect::canDoubleReplacing
PUBLIC	?canProcessReplacing@AudioEffect@@UEAAX_N@Z	; AudioEffect::canProcessReplacing
PUBLIC	?__canMonoDeprecated@AudioEffect@@UEAAX_N@Z	; AudioEffect::__canMonoDeprecated
PUBLIC	?__hasClipDeprecated@AudioEffect@@UEAAX_N@Z	; AudioEffect::__hasClipDeprecated
PUBLIC	?__hasVuDeprecated@AudioEffect@@UEAAX_N@Z	; AudioEffect::__hasVuDeprecated
PUBLIC	?setParameterAutomated@AudioEffect@@UEAAXHM@Z	; AudioEffect::setParameterAutomated
PUBLIC	?__isOutputConnectedDeprecated@AudioEffect@@UEAA_NH@Z ; AudioEffect::__isOutputConnectedDeprecated
PUBLIC	?__isInputConnectedDeprecated@AudioEffect@@UEAA_NH@Z ; AudioEffect::__isInputConnectedDeprecated
PUBLIC	?masterIdle@AudioEffect@@UEAAXXZ		; AudioEffect::masterIdle
PUBLIC	?getCurrentUniqueId@AudioEffect@@UEAAHXZ	; AudioEffect::getCurrentUniqueId
PUBLIC	?getMasterVersion@AudioEffect@@UEAAHXZ		; AudioEffect::getMasterVersion
PUBLIC	?dispatcher@AudioEffect@@UEAA_JHH_JPEAXM@Z	; AudioEffect::dispatcher
PUBLIC	??1AudioEffect@@UEAA@XZ				; AudioEffect::~AudioEffect
PUBLIC	??_GAudioEffect@@UEAAPEAXI@Z			; AudioEffect::`scalar deleting destructor'
PUBLIC	??0AudioEffect@@QEAA@P6A_JPEAUAEffect@@HH_JPEAXM@ZHH@Z ; AudioEffect::AudioEffect
PUBLIC	?processClassDoubleReplacing@AudioEffect@@KAXPEAUAEffect@@PEAPEAN1H@Z ; AudioEffect::processClassDoubleReplacing
PUBLIC	?processClassReplacing@AudioEffect@@KAXPEAUAEffect@@PEAPEAM1H@Z ; AudioEffect::processClassReplacing
PUBLIC	?__processClassDeprecated@AudioEffect@@KAXPEAUAEffect@@PEAPEAM1H@Z ; AudioEffect::__processClassDeprecated
PUBLIC	?setParameterClass@AudioEffect@@KAXPEAUAEffect@@HM@Z ; AudioEffect::setParameterClass
PUBLIC	?getParameterClass@AudioEffect@@KAMPEAUAEffect@@H@Z ; AudioEffect::getParameterClass
PUBLIC	?dispatchEffectClass@AudioEffect@@KA_JPEAUAEffect@@HH_JPEAXM@Z ; AudioEffect::dispatchEffectClass
PUBLIC	?__getVuDeprecated@AudioEffect@@UEAAMXZ		; AudioEffect::__getVuDeprecated
PUBLIC	?__processDeprecated@AudioEffect@@UEAAXPEAPEAM0H@Z ; AudioEffect::__processDeprecated
PUBLIC	?getBlockSize@AudioEffect@@UEAAHXZ		; AudioEffect::getBlockSize
PUBLIC	?getSampleRate@AudioEffect@@UEAAMXZ		; AudioEffect::getSampleRate
PUBLIC	?getAeffect@AudioEffect@@UEAAPEAUAEffect@@XZ	; AudioEffect::getAeffect
PUBLIC	?getEditor@AudioEffect@@UEAAPEAVAEffEditor@@XZ	; AudioEffect::getEditor
PUBLIC	?setNumOutputs@AudioEffect@@UEAAXH@Z		; AudioEffect::setNumOutputs
PUBLIC	?setNumInputs@AudioEffect@@UEAAXH@Z		; AudioEffect::setNumInputs
PUBLIC	?setUniqueID@AudioEffect@@UEAAXH@Z		; AudioEffect::setUniqueID
PUBLIC	?setChunk@AudioEffect@@UEAAHPEAXH_N@Z		; AudioEffect::setChunk
PUBLIC	?getChunk@AudioEffect@@UEAAHPEAPEAX_N@Z		; AudioEffect::getChunk
PUBLIC	?getParameterName@AudioEffect@@UEAAXHPEAD@Z	; AudioEffect::getParameterName
PUBLIC	?getParameterDisplay@AudioEffect@@UEAAXHPEAD@Z	; AudioEffect::getParameterDisplay
PUBLIC	?getParameterLabel@AudioEffect@@UEAAXHPEAD@Z	; AudioEffect::getParameterLabel
PUBLIC	?getProgramName@AudioEffect@@UEAAXPEAD@Z	; AudioEffect::getProgramName
PUBLIC	?setProgramName@AudioEffect@@UEAAXPEAD@Z	; AudioEffect::setProgramName
PUBLIC	?setProgram@AudioEffect@@UEAAXH@Z		; AudioEffect::setProgram
PUBLIC	?getProgram@AudioEffect@@UEAAHXZ		; AudioEffect::getProgram
PUBLIC	?getParameter@AudioEffect@@UEAAMH@Z		; AudioEffect::getParameter
PUBLIC	?setParameter@AudioEffect@@UEAAXHM@Z		; AudioEffect::setParameter
PUBLIC	?processDoubleReplacing@AudioEffect@@UEAAXPEAPEAN0H@Z ; AudioEffect::processDoubleReplacing
PUBLIC	?setBlockSize@AudioEffect@@UEAAXH@Z		; AudioEffect::setBlockSize
PUBLIC	?setSampleRate@AudioEffect@@UEAAXM@Z		; AudioEffect::setSampleRate
PUBLIC	?resume@AudioEffect@@UEAAXXZ			; AudioEffect::resume
PUBLIC	?suspend@AudioEffect@@UEAAXXZ			; AudioEffect::suspend
PUBLIC	?close@AudioEffect@@UEAAXXZ			; AudioEffect::close
PUBLIC	?open@AudioEffect@@UEAAXXZ			; AudioEffect::open
PUBLIC	?vst_strncat@@YAPEADPEADPEBD_K@Z		; vst_strncat
PUBLIC	?vst_strncpy@@YAPEADPEADPEBD_K@Z		; vst_strncpy
EXTRN	??_EAudioEffect@@UEAAPEAXI@Z:PROC		; AudioEffect::`vector deleting destructor'
;	COMDAT pdata
pdata	SEGMENT
$pdata$?int2string@AudioEffect@@UEAAXHPEADH@Z DD imagerel $LN24
	DD	imagerel $LN24+197
	DD	imagerel $unwind$?int2string@AudioEffect@@UEAAXHPEADH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?float2string@AudioEffect@@UEAAXMPEADH@Z DD imagerel $LN37
	DD	imagerel $LN37+478
	DD	imagerel $unwind$?float2string@AudioEffect@@UEAAXMPEADH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?ms2string@AudioEffect@@UEAAXMPEADH@Z DD imagerel $LN4
	DD	imagerel $LN4+106
	DD	imagerel $unwind$?ms2string@AudioEffect@@UEAAXMPEADH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?Hz2string@AudioEffect@@UEAAXMPEADH@Z DD imagerel $LN7
	DD	imagerel $LN7+101
	DD	imagerel $unwind$?Hz2string@AudioEffect@@UEAAXMPEADH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dB2string@AudioEffect@@UEAAXMPEADH@Z DD imagerel $LN8
	DD	imagerel $LN8+132
	DD	imagerel $unwind$?dB2string@AudioEffect@@UEAAXMPEADH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?setParameterAutomated@AudioEffect@@UEAAXHM@Z DD imagerel $LN5
	DD	imagerel $LN5+80
	DD	imagerel $unwind$?setParameterAutomated@AudioEffect@@UEAAXHM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__isOutputConnectedDeprecated@AudioEffect@@UEAA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+56
	DD	imagerel $unwind$?__isOutputConnectedDeprecated@AudioEffect@@UEAA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?__isInputConnectedDeprecated@AudioEffect@@UEAA_NH@Z DD imagerel $LN5
	DD	imagerel $LN5+55
	DD	imagerel $unwind$?__isInputConnectedDeprecated@AudioEffect@@UEAA_NH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?masterIdle@AudioEffect@@UEAAXXZ DD imagerel $LN5
	DD	imagerel $LN5+49
	DD	imagerel $unwind$?masterIdle@AudioEffect@@UEAAXXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getCurrentUniqueId@AudioEffect@@UEAAHXZ DD imagerel $LN5
	DD	imagerel $LN5+50
	DD	imagerel $unwind$?getCurrentUniqueId@AudioEffect@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?getMasterVersion@AudioEffect@@UEAAHXZ DD imagerel $LN6
	DD	imagerel $LN6+64
	DD	imagerel $unwind$?getMasterVersion@AudioEffect@@UEAAHXZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dispatcher@AudioEffect@@UEAA_JHH_JPEAXM@Z DD imagerel $LN36
	DD	imagerel $LN36+512
	DD	imagerel $unwind$?dispatcher@AudioEffect@@UEAA_JHH_JPEAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??1AudioEffect@@UEAA@XZ DD imagerel $LN8
	DD	imagerel $LN8+38
	DD	imagerel $unwind$??1AudioEffect@@UEAA@XZ
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??_GAudioEffect@@UEAAPEAXI@Z DD imagerel $LN6
	DD	imagerel $LN6+52
	DD	imagerel $unwind$??_GAudioEffect@@UEAAPEAXI@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$??0AudioEffect@@QEAA@P6A_JPEAUAEffect@@HH_JPEAXM@ZHH@Z DD imagerel $LN8
	DD	imagerel $LN8+241
	DD	imagerel $unwind$??0AudioEffect@@QEAA@P6A_JPEAUAEffect@@HH_JPEAXM@ZHH@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?dispatchEffectClass@AudioEffect@@KA_JPEAUAEffect@@HH_JPEAXM@Z DD imagerel $LN7
	DD	imagerel $LN7+93
	DD	imagerel $unwind$?dispatchEffectClass@AudioEffect@@KA_JPEAUAEffect@@HH_JPEAXM@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?vst_strncat@@YAPEADPEADPEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+37
	DD	imagerel $unwind$?vst_strncat@@YAPEADPEADPEBD_K@Z
pdata	ENDS
;	COMDAT pdata
pdata	SEGMENT
$pdata$?vst_strncpy@@YAPEADPEADPEBD_K@Z DD imagerel $LN4
	DD	imagerel $LN4+37
	DD	imagerel $unwind$?vst_strncpy@@YAPEADPEADPEBD_K@Z
;	COMDAT xdata
xdata	SEGMENT
$unwind$?vst_strncpy@@YAPEADPEADPEBD_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?vst_strncat@@YAPEADPEADPEBD_K@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dispatchEffectClass@AudioEffect@@KA_JPEAUAEffect@@HH_JPEAXM@Z DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??0AudioEffect@@QEAA@P6A_JPEAUAEffect@@HH_JPEAXM@ZHH@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??_GAudioEffect@@UEAAPEAXI@Z DD 040a01H
	DD	06340aH
	DD	07006320aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$??1AudioEffect@@UEAA@XZ DD 010401H
	DD	04204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dispatcher@AudioEffect@@UEAA_JHH_JPEAXM@Z DD 020601H
	DD	030023206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getMasterVersion@AudioEffect@@UEAAHXZ DD 020601H
	DD	030025206H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?getCurrentUniqueId@AudioEffect@@UEAAHXZ DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?masterIdle@AudioEffect@@UEAAXXZ DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__isInputConnectedDeprecated@AudioEffect@@UEAA_NH@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?__isOutputConnectedDeprecated@AudioEffect@@UEAA_NH@Z DD 010401H
	DD	06204H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?setParameterAutomated@AudioEffect@@UEAAXHM@Z DD 061401H
	DD	036814H
	DD	0a340aH
	DD	07006720aH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?dB2string@AudioEffect@@UEAAXMPEADH@Z DD 081501H
	DD	087415H
	DD	076415H
	DD	063415H
	DD	0e0113215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?Hz2string@AudioEffect@@UEAAXMPEADH@Z DD 081a01H
	DD	02681aH
	DD	09640fH
	DD	08340fH
	DD	0700b520fH
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?ms2string@AudioEffect@@UEAAXMPEADH@Z DD 0a1f01H
	DD	02681fH
	DD	0a7415H
	DD	096415H
	DD	083415H
	DD	0e0115215H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?float2string@AudioEffect@@UEAAXMPEADH@Z DD 0154a01H
	DD	04b84aH
	DD	059840H
	DD	06882dH
	DD	077825H
	DD	08681fH
	DD	018641bH
	DD	017541bH
	DD	016341bH
	DD	012011bH
	DD	0e012f014H
	DD	07010H
xdata	ENDS
;	COMDAT xdata
xdata	SEGMENT
$unwind$?int2string@AudioEffect@@UEAAXHPEADH@Z DD 081401H
	DD	096414H
	DD	085414H
	DD	063414H
	DD	070103214H
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h
;	COMDAT ?vst_strncpy@@YAPEADPEADPEBD_K@Z
_TEXT	SEGMENT
dst$ = 48
src$ = 56
maxLen$ = 64
?vst_strncpy@@YAPEADPEADPEBD_K@Z PROC			; vst_strncpy, COMDAT

; 295  : {

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, r8
	mov	rbx, rcx

; 296  : 	char* result = strncpy (dst, src, maxLen);

	call	QWORD PTR __imp_strncpy

; 297  : 	dst[maxLen] = 0;

	mov	BYTE PTR [rbx+rdi], 0

; 298  : 	return result;
; 299  : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?vst_strncpy@@YAPEADPEADPEBD_K@Z ENDP			; vst_strncpy
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h
;	COMDAT ?vst_strncat@@YAPEADPEADPEBD_K@Z
_TEXT	SEGMENT
dst$ = 48
src$ = 56
maxLen$ = 64
?vst_strncat@@YAPEADPEADPEBD_K@Z PROC			; vst_strncat, COMDAT

; 305  : {

$LN4:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, r8
	mov	rbx, rcx

; 306  : 	char* result = strncat (dst, src, maxLen);

	call	QWORD PTR __imp_strncat

; 307  : 	dst[maxLen] = 0;

	mov	BYTE PTR [rbx+rdi], 0

; 308  : 	return result;
; 309  : }

	mov	rbx, QWORD PTR [rsp+48]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?vst_strncat@@YAPEADPEADPEBD_K@Z ENDP			; vst_strncat
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?open@AudioEffect@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?open@AudioEffect@@UEAAXXZ PROC				; AudioEffect::open, COMDAT

; 36   : 	virtual void open () {}		///< Called when plug-in is initialized

	ret	0
?open@AudioEffect@@UEAAXXZ ENDP				; AudioEffect::open
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?close@AudioEffect@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?close@AudioEffect@@UEAAXXZ PROC			; AudioEffect::close, COMDAT

; 37   : 	virtual void close () {}	///< Called when plug-in will be released

	ret	0
?close@AudioEffect@@UEAAXXZ ENDP			; AudioEffect::close
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?suspend@AudioEffect@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?suspend@AudioEffect@@UEAAXXZ PROC			; AudioEffect::suspend, COMDAT

; 38   : 	virtual void suspend () {}	///< Called when plug-in is switched to off

	ret	0
?suspend@AudioEffect@@UEAAXXZ ENDP			; AudioEffect::suspend
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?resume@AudioEffect@@UEAAXXZ
_TEXT	SEGMENT
this$ = 8
?resume@AudioEffect@@UEAAXXZ PROC			; AudioEffect::resume, COMDAT

; 39   : 	virtual void resume () {}	///< Called when plug-in is switched to on

	ret	0
?resume@AudioEffect@@UEAAXXZ ENDP			; AudioEffect::resume
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?setSampleRate@AudioEffect@@UEAAXM@Z
_TEXT	SEGMENT
this$ = 8
sampleRate$ = 16
?setSampleRate@AudioEffect@@UEAAXM@Z PROC		; AudioEffect::setSampleRate, COMDAT

; 46   : 	virtual void setSampleRate (float sampleRate)  { this->sampleRate = sampleRate; }	///< Called when the sample rate changes (always in a suspend state)

	movss	DWORD PTR [rcx+24], xmm1
	ret	0
?setSampleRate@AudioEffect@@UEAAXM@Z ENDP		; AudioEffect::setSampleRate
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?setBlockSize@AudioEffect@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
blockSize$ = 16
?setBlockSize@AudioEffect@@UEAAXH@Z PROC		; AudioEffect::setBlockSize, COMDAT

; 47   : 	virtual void setBlockSize (VstInt32 blockSize) { this->blockSize = blockSize; }		///< Called when the Maximun block size changes (always in a suspend state). Note that the sampleFrames in Process Calls could be smaller than this block size, but NOT bigger.

	mov	DWORD PTR [rcx+28], edx
	ret	0
?setBlockSize@AudioEffect@@UEAAXH@Z ENDP		; AudioEffect::setBlockSize
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?processDoubleReplacing@AudioEffect@@UEAAXPEAPEAN0H@Z
_TEXT	SEGMENT
this$ = 8
inputs$ = 16
outputs$ = 24
sampleFrames$ = 32
?processDoubleReplacing@AudioEffect@@UEAAXPEAPEAN0H@Z PROC ; AudioEffect::processDoubleReplacing, COMDAT

; 52   : 	virtual void processDoubleReplacing (double** inputs, double** outputs, VstInt32 sampleFrames) {} ///< Process 64 bit (double precision) floats (always in a resume state) \sa processReplacing

	ret	0
?processDoubleReplacing@AudioEffect@@UEAAXPEAPEAN0H@Z ENDP ; AudioEffect::processDoubleReplacing
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?setParameter@AudioEffect@@UEAAXHM@Z
_TEXT	SEGMENT
this$ = 8
index$ = 16
value$ = 24
?setParameter@AudioEffect@@UEAAXHM@Z PROC		; AudioEffect::setParameter, COMDAT

; 60   : 	virtual void setParameter (VstInt32 index, float value) {}	///< Called when a parameter changed

	ret	0
?setParameter@AudioEffect@@UEAAXHM@Z ENDP		; AudioEffect::setParameter
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?getParameter@AudioEffect@@UEAAMH@Z
_TEXT	SEGMENT
this$ = 8
index$ = 16
?getParameter@AudioEffect@@UEAAMH@Z PROC		; AudioEffect::getParameter, COMDAT

; 61   : 	virtual float getParameter (VstInt32 index) { return 0; }	///< Return the value of the parameter with \e index

	xorps	xmm0, xmm0
	ret	0
?getParameter@AudioEffect@@UEAAMH@Z ENDP		; AudioEffect::getParameter
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?getProgram@AudioEffect@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?getProgram@AudioEffect@@UEAAHXZ PROC			; AudioEffect::getProgram, COMDAT

; 69   : 	virtual VstInt32 getProgram () { return curProgram; }					///< Return the index to the current program

	mov	eax, DWORD PTR [rcx+40]
	ret	0
?getProgram@AudioEffect@@UEAAHXZ ENDP			; AudioEffect::getProgram
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?setProgram@AudioEffect@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
program$ = 16
?setProgram@AudioEffect@@UEAAXH@Z PROC			; AudioEffect::setProgram, COMDAT

; 70   : 	virtual void setProgram (VstInt32 program) { curProgram = program; }	///< Set the current program to \e program

	mov	DWORD PTR [rcx+40], edx
	ret	0
?setProgram@AudioEffect@@UEAAXH@Z ENDP			; AudioEffect::setProgram
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?setProgramName@AudioEffect@@UEAAXPEAD@Z
_TEXT	SEGMENT
this$ = 8
name$ = 16
?setProgramName@AudioEffect@@UEAAXPEAD@Z PROC		; AudioEffect::setProgramName, COMDAT

; 72   : 	virtual void setProgramName (char* name) {}				///< Stuff the name field of the current program with \e name. Limited to #kVstMaxProgNameLen.

	ret	0
?setProgramName@AudioEffect@@UEAAXPEAD@Z ENDP		; AudioEffect::setProgramName
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?getProgramName@AudioEffect@@UEAAXPEAD@Z
_TEXT	SEGMENT
this$ = 8
name$ = 16
?getProgramName@AudioEffect@@UEAAXPEAD@Z PROC		; AudioEffect::getProgramName, COMDAT

; 73   : 	virtual void getProgramName (char* name) { *name = 0; }	///< Stuff \e name with the name of the current program. Limited to #kVstMaxProgNameLen.

	mov	BYTE PTR [rdx], 0
	ret	0
?getProgramName@AudioEffect@@UEAAXPEAD@Z ENDP		; AudioEffect::getProgramName
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?getParameterLabel@AudioEffect@@UEAAXHPEAD@Z
_TEXT	SEGMENT
this$ = 8
index$ = 16
label$ = 24
?getParameterLabel@AudioEffect@@UEAAXHPEAD@Z PROC	; AudioEffect::getParameterLabel, COMDAT

; 75   : 	virtual void getParameterLabel (VstInt32 index, char* label)  { *label = 0; }	///< Stuff \e label with the units in which parameter \e index is displayed (i.e. "sec", "dB", "type", etc...). Limited to #kVstMaxParamStrLen.

	mov	BYTE PTR [r8], 0
	ret	0
?getParameterLabel@AudioEffect@@UEAAXHPEAD@Z ENDP	; AudioEffect::getParameterLabel
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?getParameterDisplay@AudioEffect@@UEAAXHPEAD@Z
_TEXT	SEGMENT
this$ = 8
index$ = 16
text$ = 24
?getParameterDisplay@AudioEffect@@UEAAXHPEAD@Z PROC	; AudioEffect::getParameterDisplay, COMDAT

; 76   : 	virtual void getParameterDisplay (VstInt32 index, char* text) { *text = 0; }	///< Stuff \e text with a string representation ("0.5", "-3", "PLATE", etc...) of the value of parameter \e index. Limited to #kVstMaxParamStrLen.

	mov	BYTE PTR [r8], 0
	ret	0
?getParameterDisplay@AudioEffect@@UEAAXHPEAD@Z ENDP	; AudioEffect::getParameterDisplay
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?getParameterName@AudioEffect@@UEAAXHPEAD@Z
_TEXT	SEGMENT
this$ = 8
index$ = 16
text$ = 24
?getParameterName@AudioEffect@@UEAAXHPEAD@Z PROC	; AudioEffect::getParameterName, COMDAT

; 77   : 	virtual void getParameterName (VstInt32 index, char* text)    { *text = 0; }    ///< Stuff \e text with the name ("Time", "Gain", "RoomType", etc...) of parameter \e index. Limited to #kVstMaxParamStrLen.

	mov	BYTE PTR [r8], 0
	ret	0
?getParameterName@AudioEffect@@UEAAXHPEAD@Z ENDP	; AudioEffect::getParameterName
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?getChunk@AudioEffect@@UEAAHPEAPEAX_N@Z
_TEXT	SEGMENT
this$ = 8
data$ = 16
isPreset$ = 24
?getChunk@AudioEffect@@UEAAHPEAPEAX_N@Z PROC		; AudioEffect::getChunk, COMDAT

; 79   : 	virtual VstInt32 getChunk (void** data, bool isPreset = false) { return 0; } ///< Host stores plug-in state. Returns the size in bytes of the chunk (plug-in allocates the data array)

	xor	eax, eax
	ret	0
?getChunk@AudioEffect@@UEAAHPEAPEAX_N@Z ENDP		; AudioEffect::getChunk
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?setChunk@AudioEffect@@UEAAHPEAXH_N@Z
_TEXT	SEGMENT
this$ = 8
data$ = 16
byteSize$ = 24
isPreset$ = 32
?setChunk@AudioEffect@@UEAAHPEAXH_N@Z PROC		; AudioEffect::setChunk, COMDAT

; 80   : 	virtual VstInt32 setChunk (void* data, VstInt32 byteSize, bool isPreset = false) { return 0; }	///< Host restores plug-in state

	xor	eax, eax
	ret	0
?setChunk@AudioEffect@@UEAAHPEAXH_N@Z ENDP		; AudioEffect::setChunk
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?setUniqueID@AudioEffect@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
iD$ = 16
?setUniqueID@AudioEffect@@UEAAXH@Z PROC			; AudioEffect::setUniqueID, COMDAT

; 87   : 	virtual void setUniqueID (VstInt32 iD)        { cEffect.uniqueID = iD; }		///< Must be called to set the plug-ins unique ID!

	mov	DWORD PTR [rcx+160], edx
	ret	0
?setUniqueID@AudioEffect@@UEAAXH@Z ENDP			; AudioEffect::setUniqueID
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?setNumInputs@AudioEffect@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
inputs$ = 16
?setNumInputs@AudioEffect@@UEAAXH@Z PROC		; AudioEffect::setNumInputs, COMDAT

; 88   : 	virtual void setNumInputs (VstInt32 inputs)   { cEffect.numInputs = inputs; }	///< Set the number of inputs the plug-in will handle. For a plug-in which could change its IO configuration, this number is the maximun available inputs.

	mov	DWORD PTR [rcx+96], edx
	ret	0
?setNumInputs@AudioEffect@@UEAAXH@Z ENDP		; AudioEffect::setNumInputs
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?setNumOutputs@AudioEffect@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
outputs$ = 16
?setNumOutputs@AudioEffect@@UEAAXH@Z PROC		; AudioEffect::setNumOutputs, COMDAT

; 89   : 	virtual void setNumOutputs (VstInt32 outputs) { cEffect.numOutputs = outputs; }	///< Set the number of outputs the plug-in will handle. For a plug-in which could change its IO configuration, this number is the maximun available ouputs.

	mov	DWORD PTR [rcx+100], edx
	ret	0
?setNumOutputs@AudioEffect@@UEAAXH@Z ENDP		; AudioEffect::setNumOutputs
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?getEditor@AudioEffect@@UEAAPEAVAEffEditor@@XZ
_TEXT	SEGMENT
this$ = 8
?getEditor@AudioEffect@@UEAAPEAVAEffEditor@@XZ PROC	; AudioEffect::getEditor, COMDAT

; 106  : 	virtual AEffEditor* getEditor () { return editor; }	///< Returns the attached editor

	mov	rax, QWORD PTR [rcx+16]
	ret	0
?getEditor@AudioEffect@@UEAAPEAVAEffEditor@@XZ ENDP	; AudioEffect::getEditor
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?getAeffect@AudioEffect@@UEAAPEAUAEffect@@XZ
_TEXT	SEGMENT
this$ = 8
?getAeffect@AudioEffect@@UEAAPEAUAEffect@@XZ PROC	; AudioEffect::getAeffect, COMDAT

; 113  : 	virtual AEffect* getAeffect ()   { return &cEffect; }		///< Returns the #AEffect structure

	lea	rax, QWORD PTR [rcx+48]
	ret	0
?getAeffect@AudioEffect@@UEAAPEAUAEffect@@XZ ENDP	; AudioEffect::getAeffect
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?getSampleRate@AudioEffect@@UEAAMXZ
_TEXT	SEGMENT
this$ = 8
?getSampleRate@AudioEffect@@UEAAMXZ PROC		; AudioEffect::getSampleRate, COMDAT

; 114  : 	virtual float getSampleRate ()   { return sampleRate; }		///< Returns the current sample rate

	movss	xmm0, DWORD PTR [rcx+24]
	ret	0
?getSampleRate@AudioEffect@@UEAAMXZ ENDP		; AudioEffect::getSampleRate
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?getBlockSize@AudioEffect@@UEAAHXZ
_TEXT	SEGMENT
this$ = 8
?getBlockSize@AudioEffect@@UEAAHXZ PROC			; AudioEffect::getBlockSize, COMDAT

; 115  : 	virtual VstInt32 getBlockSize () { return blockSize; }		///< Returns the current Maximum block size

	mov	eax, DWORD PTR [rcx+28]
	ret	0
?getBlockSize@AudioEffect@@UEAAHXZ ENDP			; AudioEffect::getBlockSize
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?__processDeprecated@AudioEffect@@UEAAXPEAPEAM0H@Z
_TEXT	SEGMENT
this$ = 8
inputs$ = 16
outputs$ = 24
sampleFrames$ = 32
?__processDeprecated@AudioEffect@@UEAAXPEAPEAM0H@Z PROC	; AudioEffect::__processDeprecated, COMDAT

; 142  : 	virtual void DECLARE_VST_DEPRECATED (process) (float** inputs, float** outputs, VstInt32 sampleFrames) {}

	ret	0
?__processDeprecated@AudioEffect@@UEAAXPEAPEAM0H@Z ENDP	; AudioEffect::__processDeprecated
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.h
;	COMDAT ?__getVuDeprecated@AudioEffect@@UEAAMXZ
_TEXT	SEGMENT
this$ = 8
?__getVuDeprecated@AudioEffect@@UEAAMXZ PROC		; AudioEffect::__getVuDeprecated, COMDAT

; 143  : 	virtual float DECLARE_VST_DEPRECATED (getVu) () { return 0; }

	xorps	xmm0, xmm0
	ret	0
?__getVuDeprecated@AudioEffect@@UEAAMXZ ENDP		; AudioEffect::__getVuDeprecated
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?dispatchEffectClass@AudioEffect@@KA_JPEAUAEffect@@HH_JPEAXM@Z
_TEXT	SEGMENT
e$ = 64
opCode$ = 72
index$ = 80
value$ = 88
ptr$ = 96
opt$ = 104
?dispatchEffectClass@AudioEffect@@KA_JPEAUAEffect@@HH_JPEAXM@Z PROC ; AudioEffect::dispatchEffectClass, COMDAT

; 22   : {

$LN7:
	push	rbx
	sub	rsp, 48					; 00000030H

; 23   : 	AudioEffect* ae = (AudioEffect*)(e->object);

	mov	rbx, QWORD PTR [rcx+96]

; 24   : 
; 25   : 	if (opCode == effClose)

	movss	xmm0, DWORD PTR opt$[rsp]
	mov	rcx, rbx
	movss	DWORD PTR [rsp+40], xmm0
	mov	r10, QWORD PTR [rbx]
	cmp	edx, 1
	jne	SHORT $LN2@dispatchEf

; 26   : 	{
; 27   : 		ae->dispatcher (opCode, index, value, ptr, opt);

	mov	rdx, QWORD PTR ptr$[rsp]
	mov	QWORD PTR [rsp+32], rdx
	mov	edx, 1
	call	QWORD PTR [r10+8]

; 28   : 		delete ae;

	mov	r8, QWORD PTR [rbx]
	mov	edx, 1
	mov	rcx, rbx
	call	QWORD PTR [r8]

; 29   : 		return 1;

	mov	eax, 1
	jmp	SHORT $LN1@dispatchEf
$LN2@dispatchEf:

; 30   : 	}
; 31   : 
; 32   : 	return ae->dispatcher (opCode, index, value, ptr, opt);

	mov	rax, QWORD PTR ptr$[rsp]
	mov	QWORD PTR [rsp+32], rax
	call	QWORD PTR [r10+8]
$LN1@dispatchEf:

; 33   : }

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
?dispatchEffectClass@AudioEffect@@KA_JPEAUAEffect@@HH_JPEAXM@Z ENDP ; AudioEffect::dispatchEffectClass
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?getParameterClass@AudioEffect@@KAMPEAUAEffect@@H@Z
_TEXT	SEGMENT
e$ = 8
index$ = 16
?getParameterClass@AudioEffect@@KAMPEAUAEffect@@H@Z PROC ; AudioEffect::getParameterClass, COMDAT

; 38   : 	AudioEffect* ae = (AudioEffect*)(e->object);

	mov	rcx, QWORD PTR [rcx+96]

; 39   : 	return ae->getParameter (index);

	mov	rax, QWORD PTR [rcx]
	rex_jmp	QWORD PTR [rax+88]
?getParameterClass@AudioEffect@@KAMPEAUAEffect@@H@Z ENDP ; AudioEffect::getParameterClass
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?setParameterClass@AudioEffect@@KAXPEAUAEffect@@HM@Z
_TEXT	SEGMENT
e$ = 8
index$ = 16
value$ = 24
?setParameterClass@AudioEffect@@KAXPEAUAEffect@@HM@Z PROC ; AudioEffect::setParameterClass, COMDAT

; 45   : 	AudioEffect* ae = (AudioEffect*)(e->object);

	mov	rcx, QWORD PTR [rcx+96]

; 46   : 	ae->setParameter (index, value);

	mov	rax, QWORD PTR [rcx]
	rex_jmp	QWORD PTR [rax+80]
?setParameterClass@AudioEffect@@KAXPEAUAEffect@@HM@Z ENDP ; AudioEffect::setParameterClass
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?__processClassDeprecated@AudioEffect@@KAXPEAUAEffect@@PEAPEAM1H@Z
_TEXT	SEGMENT
e$ = 8
inputs$ = 16
outputs$ = 24
sampleFrames$ = 32
?__processClassDeprecated@AudioEffect@@KAXPEAUAEffect@@PEAPEAM1H@Z PROC ; AudioEffect::__processClassDeprecated, COMDAT

; 52   : 	AudioEffect* ae = (AudioEffect*)(e->object);

	mov	rcx, QWORD PTR [rcx+96]

; 53   : 	ae->DECLARE_VST_DEPRECATED (process) (inputs, outputs, sampleFrames);

	mov	rax, QWORD PTR [rcx]
	rex_jmp	QWORD PTR [rax+328]
?__processClassDeprecated@AudioEffect@@KAXPEAUAEffect@@PEAPEAM1H@Z ENDP ; AudioEffect::__processClassDeprecated
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?processClassReplacing@AudioEffect@@KAXPEAUAEffect@@PEAPEAM1H@Z
_TEXT	SEGMENT
e$ = 8
inputs$ = 16
outputs$ = 24
sampleFrames$ = 32
?processClassReplacing@AudioEffect@@KAXPEAUAEffect@@PEAPEAM1H@Z PROC ; AudioEffect::processClassReplacing, COMDAT

; 59   : 	AudioEffect* ae = (AudioEffect*)(e->object);

	mov	rcx, QWORD PTR [rcx+96]

; 60   : 	ae->processReplacing (inputs, outputs, sampleFrames);

	mov	rax, QWORD PTR [rcx]
	rex_jmp	QWORD PTR [rax+64]
?processClassReplacing@AudioEffect@@KAXPEAUAEffect@@PEAPEAM1H@Z ENDP ; AudioEffect::processClassReplacing
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?processClassDoubleReplacing@AudioEffect@@KAXPEAUAEffect@@PEAPEAN1H@Z
_TEXT	SEGMENT
e$ = 8
inputs$ = 16
outputs$ = 24
sampleFrames$ = 32
?processClassDoubleReplacing@AudioEffect@@KAXPEAUAEffect@@PEAPEAN1H@Z PROC ; AudioEffect::processClassDoubleReplacing, COMDAT

; 67   : 	AudioEffect* ae = (AudioEffect*)(e->object);

	mov	rcx, QWORD PTR [rcx+96]

; 68   : 	ae->processDoubleReplacing (inputs, outputs, sampleFrames);

	mov	rax, QWORD PTR [rcx]
	rex_jmp	QWORD PTR [rax+72]
?processClassDoubleReplacing@AudioEffect@@KAXPEAUAEffect@@PEAPEAN1H@Z ENDP ; AudioEffect::processClassDoubleReplacing
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ??0AudioEffect@@QEAA@P6A_JPEAUAEffect@@HH_JPEAXM@ZHH@Z
_TEXT	SEGMENT
this$ = 48
audioMaster$ = 56
numPrograms$dead$ = 64
numParams$dead$ = 72
??0AudioEffect@@QEAA@P6A_JPEAUAEffect@@HH_JPEAXM@ZHH@Z PROC ; AudioEffect::AudioEffect, COMDAT

; 107  : {

$LN8:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H

; 101  : , editor (0)

	and	QWORD PTR [rcx+16], 0
	lea	rax, OFFSET FLAT:??_7AudioEffect@@6B@

; 102  : , sampleRate (44100.f)
; 103  : , blockSize (1024)
; 104  : , numPrograms (numPrograms)
; 105  : , numParams (numParams)
; 106  : , curProgram (0)

	and	DWORD PTR [rcx+40], 0
	mov	rdi, rcx
	mov	QWORD PTR [rcx+8], rdx

; 108  : 	memset (&cEffect, 0, sizeof (cEffect));

	mov	r8d, 192				; 000000c0H
	mov	QWORD PTR [rcx], rax
	xor	edx, edx
	mov	DWORD PTR [rcx+24], 1194083328		; 472c4400H
	mov	DWORD PTR [rcx+28], 1024		; 00000400H
	mov	DWORD PTR [rcx+32], 5
	mov	DWORD PTR [rcx+36], 11
	add	rcx, 48					; 00000030H
	call	QWORD PTR __imp_memset

; 109  : 
; 110  : 	cEffect.magic = kEffectMagic;
; 111  : 	cEffect.dispatcher = dispatchEffectClass;
; 112  : 	cEffect.DECLARE_VST_DEPRECATED (process) = DECLARE_VST_DEPRECATED (processClass);
; 113  : 	cEffect.setParameter = setParameterClass;
; 114  : 	cEffect.getParameter = getParameterClass;
; 115  : 	cEffect.numPrograms  = numPrograms;
; 116  : 	cEffect.numParams    = numParams;
; 117  : 	cEffect.numInputs  = 1;		// mono input
; 118  : 	cEffect.numOutputs = 2;		// stereo output
; 119  : 	cEffect.DECLARE_VST_DEPRECATED (ioRatio) = 1.f;
; 120  : 	cEffect.object = this;
; 121  : 	cEffect.uniqueID = CCONST ('N', 'o', 'E', 'f');
; 122  : 	cEffect.version  = 1;
; 123  : 	cEffect.processReplacing = processClassReplacing;
; 124  : 
; 125  : #if VST_2_4_EXTENSIONS
; 126  : 	canProcessReplacing (); // mandatory in VST 2.4!
; 127  : 	cEffect.processDoubleReplacing = processClassDoubleReplacing;

	or	DWORD PTR [rdi+104], 16
	lea	rax, OFFSET FLAT:?dispatchEffectClass@AudioEffect@@KA_JPEAUAEffect@@HH_JPEAXM@Z ; AudioEffect::dispatchEffectClass

; 128  : #endif
; 129  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	QWORD PTR [rdi+56], rax
	lea	rax, OFFSET FLAT:?__processClassDeprecated@AudioEffect@@KAXPEAUAEffect@@PEAPEAM1H@Z ; AudioEffect::__processClassDeprecated
	mov	QWORD PTR [rdi+64], rax
	lea	rax, OFFSET FLAT:?setParameterClass@AudioEffect@@KAXPEAUAEffect@@HM@Z ; AudioEffect::setParameterClass
	mov	QWORD PTR [rdi+72], rax
	lea	rax, OFFSET FLAT:?getParameterClass@AudioEffect@@KAMPEAUAEffect@@H@Z ; AudioEffect::getParameterClass
	mov	QWORD PTR [rdi+80], rax
	mov	eax, 1
	mov	DWORD PTR [rdi+96], eax
	mov	DWORD PTR [rdi+164], eax
	lea	rax, OFFSET FLAT:?processClassReplacing@AudioEffect@@KAXPEAUAEffect@@PEAPEAM1H@Z ; AudioEffect::processClassReplacing
	mov	QWORD PTR [rdi+168], rax
	lea	rax, OFFSET FLAT:?processClassDoubleReplacing@AudioEffect@@KAXPEAUAEffect@@PEAPEAN1H@Z ; AudioEffect::processClassDoubleReplacing
	mov	QWORD PTR [rdi+176], rax
	mov	rax, rdi
	mov	DWORD PTR [rdi+48], 1450406992		; 56737450H
	mov	DWORD PTR [rdi+88], 5
	mov	DWORD PTR [rdi+92], 11
	mov	DWORD PTR [rdi+100], 2
	mov	DWORD PTR [rdi+140], 1065353216		; 3f800000H
	mov	QWORD PTR [rdi+144], rdi
	mov	DWORD PTR [rdi+160], 1315915110		; 4e6f4566H
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??0AudioEffect@@QEAA@P6A_JPEAUAEffect@@HH_JPEAXM@ZHH@Z ENDP ; AudioEffect::AudioEffect
_TEXT	ENDS
; Function compile flags: /Ogspy
;	COMDAT ??_GAudioEffect@@UEAAPEAXI@Z
_TEXT	SEGMENT
this$ = 48
__flags$ = 56
??_GAudioEffect@@UEAAPEAXI@Z PROC			; AudioEffect::`scalar deleting destructor', COMDAT
$LN6:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	ebx, edx
	mov	rdi, rcx
	call	??1AudioEffect@@UEAA@XZ			; AudioEffect::~AudioEffect
	test	bl, 1
	je	SHORT $LN2@scalar
	mov	edx, 240				; 000000f0H
	mov	rcx, rdi
	call	??3@YAXPEAX_K@Z				; operator delete
$LN2@scalar:
	mov	rbx, QWORD PTR [rsp+48]
	mov	rax, rdi
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
??_GAudioEffect@@UEAAPEAXI@Z ENDP			; AudioEffect::`scalar deleting destructor'
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ??1AudioEffect@@UEAA@XZ
_TEXT	SEGMENT
this$ = 48
??1AudioEffect@@UEAA@XZ PROC				; AudioEffect::~AudioEffect, COMDAT

; 133  : {

$LN8:
	sub	rsp, 40					; 00000028H
	lea	rax, OFFSET FLAT:??_7AudioEffect@@6B@
	mov	QWORD PTR [rcx], rax

; 134  : 	if (editor)

	mov	rcx, QWORD PTR [rcx+16]
	test	rcx, rcx
	je	SHORT $LN4@AudioEffec

; 135  : 		delete editor;

	mov	rax, QWORD PTR [rcx]
	mov	edx, 1
	call	QWORD PTR [rax]
$LN4@AudioEffec:

; 136  : }

	add	rsp, 40					; 00000028H
	ret	0
??1AudioEffect@@UEAA@XZ ENDP				; AudioEffect::~AudioEffect
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?dispatcher@AudioEffect@@UEAA_JHH_JPEAXM@Z
_TEXT	SEGMENT
this$ = 48
opcode$ = 56
index$ = 64
value$ = 72
ptr$ = 80
opt$ = 88
?dispatcher@AudioEffect@@UEAA_JHH_JPEAXM@Z PROC		; AudioEffect::dispatcher, COMDAT

; 150  : {

$LN36:
	push	rbx
	sub	rsp, 32					; 00000020H

; 151  : 	VstIntPtr v = 0;

	xor	ebx, ebx
	mov	r10, r9
	mov	r9d, r8d

; 152  : 	
; 153  : 	switch (opcode)

	cmp	edx, 10
	jg	$LN31@dispatcher
	je	$LN14@dispatcher
	test	edx, edx
	je	$LN4@dispatcher
	sub	edx, 1
	je	$LN5@dispatcher
	sub	edx, 1
	je	$LN6@dispatcher
	sub	edx, 1
	je	$LN8@dispatcher
	sub	edx, 1
	je	SHORT $LN9@dispatcher
	sub	edx, 1
	je	SHORT $LN10@dispatcher
	sub	edx, 1
	je	SHORT $LN11@dispatcher
	sub	edx, 1
	je	SHORT $LN12@dispatcher
	cmp	edx, 1
	jne	$LN2@dispatcher

; 163  : 		case effGetParamName:		getParameterName (index, (char*)ptr);				break;

	mov	rax, QWORD PTR [rcx]
	mov	edx, r9d
	mov	r8, QWORD PTR ptr$[rsp]
	call	QWORD PTR [rax+152]
	jmp	$LN2@dispatcher
$LN12@dispatcher:

; 162  : 		case effGetParamDisplay:	getParameterDisplay (index, (char*)ptr);			break;

	mov	rax, QWORD PTR [rcx]
	mov	edx, r9d
	mov	r8, QWORD PTR ptr$[rsp]
	call	QWORD PTR [rax+144]
	jmp	$LN2@dispatcher
$LN11@dispatcher:

; 161  : 		case effGetParamLabel:		getParameterLabel (index, (char*)ptr);				break;

	mov	rax, QWORD PTR [rcx]
	mov	edx, r9d
	mov	r8, QWORD PTR ptr$[rsp]
	call	QWORD PTR [rax+136]
	jmp	$LN2@dispatcher
$LN10@dispatcher:

; 160  : 		case effGetProgramName: 	getProgramName ((char*)ptr);						break;

	mov	rax, QWORD PTR [rcx]
	mov	rdx, QWORD PTR ptr$[rsp]
	call	QWORD PTR [rax+128]
	jmp	$LN2@dispatcher
$LN9@dispatcher:

; 159  : 		case effSetProgramName: 	setProgramName ((char*)ptr);						break;

	mov	rax, QWORD PTR [rcx]
	mov	rdx, QWORD PTR ptr$[rsp]
	call	QWORD PTR [rax+120]
	jmp	$LN2@dispatcher
$LN8@dispatcher:

; 158  : 		case effGetProgram:			v = getProgram ();									break;

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+104]
$LN32@dispatcher:

; 191  : 	}
; 192  : 	return v;

	movsxd	rbx, eax
	jmp	$LN2@dispatcher
$LN6@dispatcher:

; 157  : 		case effSetProgram:			if (value < numPrograms) setProgram ((VstInt32)value); break;

	movsxd	rax, DWORD PTR [rcx+32]
	cmp	r10, rax
	jge	$LN2@dispatcher
	mov	rax, QWORD PTR [rcx]
	mov	edx, r10d
	call	QWORD PTR [rax+112]
	jmp	$LN2@dispatcher
$LN5@dispatcher:

; 156  : 		case effClose:				close ();											break;

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+24]
	jmp	$LN2@dispatcher
$LN4@dispatcher:

; 154  : 	{
; 155  : 		case effOpen:				open ();											break;

	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+16]
	jmp	$LN2@dispatcher
$LN14@dispatcher:

; 164  : 
; 165  : 		case effSetSampleRate:		setSampleRate (opt);								break;

	mov	rax, QWORD PTR [rcx]
	movss	xmm1, DWORD PTR opt$[rsp]
	call	QWORD PTR [rax+48]
	jmp	$LN2@dispatcher
$LN31@dispatcher:

; 152  : 	
; 153  : 	switch (opcode)

	sub	edx, 11
	je	$LN15@dispatcher
	sub	edx, 1
	je	$LN16@dispatcher
	sub	edx, 1
	je	$LN19@dispatcher
	sub	edx, 1
	je	SHORT $LN21@dispatcher
	sub	edx, 1
	je	SHORT $LN23@dispatcher
	sub	edx, 4
	je	SHORT $LN25@dispatcher
	sub	edx, 3
	je	SHORT $LN27@dispatcher
	sub	edx, 1
	je	SHORT $LN28@dispatcher
	cmp	edx, 1
	jne	$LN2@dispatcher

; 190  : 		case effSetChunk:			v = setChunk (ptr, (VstInt32)value, index ? true : false);	break;

	mov	rax, QWORD PTR [rcx]
	test	r9d, r9d
	mov	rdx, QWORD PTR ptr$[rsp]
	mov	r8d, r10d
	setne	r9b
	call	QWORD PTR [rax+168]
	jmp	$LN32@dispatcher
$LN28@dispatcher:

; 187  : 
; 188  : 		//---Persistence-------
; 189  : 		case effGetChunk:			v = getChunk ((void**)ptr, index ? true : false);	break;

	mov	rax, QWORD PTR [rcx]
	test	r9d, r9d
	mov	rdx, QWORD PTR ptr$[rsp]
	setne	r8b
	call	QWORD PTR [rax+160]
	jmp	$LN32@dispatcher
$LN27@dispatcher:

; 177  : 		
; 178  : 	#if (TARGET_API_MAC_CARBON && !VST_FORCE_DEPRECATED)
; 179  : 		case effEditDraw:			if (editor) editor->draw ((ERect*)ptr);				break;
; 180  : 		case effEditMouse:			if (editor) v = editor->mouse (index, value);		break;
; 181  : 		case effEditKey:			if (editor) v = editor->key (value);				break;
; 182  : 		case effEditTop:			if (editor) editor->top ();							break;
; 183  : 		case effEditSleep:			if (editor) editor->sleep ();						break;
; 184  : 	#endif
; 185  : 		
; 186  : 		case DECLARE_VST_DEPRECATED (effIdentify):	v = CCONST ('N', 'v', 'E', 'f');	break;

	mov	ebx, 1316373862				; 4e764566H
	jmp	SHORT $LN2@dispatcher
$LN25@dispatcher:

; 176  : 		case effEditIdle:			if (editor) editor->idle ();						break;

	mov	rcx, QWORD PTR [rcx+16]
	test	rcx, rcx
	je	SHORT $LN2@dispatcher
	mov	rax, QWORD PTR [rcx]
	call	QWORD PTR [rax+48]
	jmp	SHORT $LN2@dispatcher
$LN23@dispatcher:

; 175  : 		case effEditClose:			if (editor) editor->close ();						break;		

	mov	rcx, QWORD PTR [rcx+16]
	test	rcx, rcx
	je	SHORT $LN2@dispatcher
	mov	rax, QWORD PTR [rcx]
$LN34@dispatcher:

; 191  : 	}
; 192  : 	return v;

	call	QWORD PTR [rax+32]
	jmp	SHORT $LN2@dispatcher
$LN21@dispatcher:

; 174  : 		case effEditOpen:			if (editor) v = editor->open (ptr) ? 1 : 0;			break;

	mov	rcx, QWORD PTR [rcx+16]
	test	rcx, rcx
	je	SHORT $LN2@dispatcher
	mov	rax, QWORD PTR [rcx]
	mov	rdx, QWORD PTR ptr$[rsp]
	call	QWORD PTR [rax+24]
	jmp	SHORT $LN33@dispatcher
$LN19@dispatcher:

; 168  : 	#if !VST_FORCE_DEPRECATED
; 169  : 		case effGetVu:				v = (VstIntPtr)(getVu () * 32767.);					break;
; 170  : 	#endif
; 171  : 
; 172  : 		//---Editor------------
; 173  : 		case effEditGetRect:		if (editor) v = editor->getRect ((ERect**)ptr) ? 1 : 0;	break;

	mov	rcx, QWORD PTR [rcx+16]
	test	rcx, rcx
	je	SHORT $LN2@dispatcher
	mov	rax, QWORD PTR [rcx]
	mov	rdx, QWORD PTR ptr$[rsp]
	call	QWORD PTR [rax+16]
$LN33@dispatcher:

; 191  : 	}
; 192  : 	return v;

	test	al, al
	setne	bl
	jmp	SHORT $LN2@dispatcher
$LN16@dispatcher:

; 167  : 		case effMainsChanged:		if (!value) suspend (); else resume ();				break;

	mov	rax, QWORD PTR [rcx]
	test	r10, r10
	je	SHORT $LN34@dispatcher
	call	QWORD PTR [rax+40]
	jmp	SHORT $LN2@dispatcher
$LN15@dispatcher:

; 166  : 		case effSetBlockSize:		setBlockSize ((VstInt32)value);						break;

	mov	r8, QWORD PTR [rcx]
	mov	edx, r10d
	call	QWORD PTR [r8+56]
$LN2@dispatcher:

; 191  : 	}
; 192  : 	return v;

	mov	rax, rbx

; 193  : }

	add	rsp, 32					; 00000020H
	pop	rbx
	ret	0
?dispatcher@AudioEffect@@UEAA_JHH_JPEAXM@Z ENDP		; AudioEffect::dispatcher
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?getMasterVersion@AudioEffect@@UEAAHXZ
_TEXT	SEGMENT
this$ = 64
?getMasterVersion@AudioEffect@@UEAAHXZ PROC		; AudioEffect::getMasterVersion, COMDAT

; 201  : {

$LN6:
	push	rbx
	sub	rsp, 48					; 00000030H

; 202  : 	VstInt32 version = 1;
; 203  : 	if (audioMaster)

	mov	rax, QWORD PTR [rcx+8]
	mov	ebx, 1
	test	rax, rax
	je	SHORT $LN3@getMasterV

; 204  : 	{
; 205  : 		version = (VstInt32)audioMaster (&cEffect, audioMasterVersion, 0, 0, 0, 0);

	xorps	xmm0, xmm0
	add	rcx, 48					; 00000030H
	movss	DWORD PTR [rsp+40], xmm0
	xor	r9d, r9d
	and	QWORD PTR [rsp+32], 0
	xor	r8d, r8d
	mov	edx, ebx
	call	rax

; 206  : 		if (!version)	// old

	test	eax, eax
	cmove	eax, ebx
	mov	ebx, eax
$LN3@getMasterV:

; 207  : 			version = 1;
; 208  : 	}
; 209  : 	return version;

	mov	eax, ebx

; 210  : }

	add	rsp, 48					; 00000030H
	pop	rbx
	ret	0
?getMasterVersion@AudioEffect@@UEAAHXZ ENDP		; AudioEffect::getMasterVersion
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?getCurrentUniqueId@AudioEffect@@UEAAHXZ
_TEXT	SEGMENT
this$ = 64
?getCurrentUniqueId@AudioEffect@@UEAAHXZ PROC		; AudioEffect::getCurrentUniqueId, COMDAT

; 217  : {

$LN5:
	sub	rsp, 56					; 00000038H

; 218  : 	VstInt32 id = 0;
; 219  : 	if (audioMaster)

	mov	r10, QWORD PTR [rcx+8]
	xor	eax, eax
	test	r10, r10
	je	SHORT $LN2@getCurrent

; 220  : 		id = (VstInt32)audioMaster (&cEffect, audioMasterCurrentId, 0, 0, 0, 0);

	xorps	xmm0, xmm0
	lea	edx, QWORD PTR [rax+2]
	movss	DWORD PTR [rsp+40], xmm0
	add	rcx, 48					; 00000030H
	xor	r9d, r9d
	mov	QWORD PTR [rsp+32], rax
	xor	r8d, r8d
	call	r10
$LN2@getCurrent:

; 221  : 	return id;
; 222  : }

	add	rsp, 56					; 00000038H
	ret	0
?getCurrentUniqueId@AudioEffect@@UEAAHXZ ENDP		; AudioEffect::getCurrentUniqueId
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?masterIdle@AudioEffect@@UEAAXXZ
_TEXT	SEGMENT
this$ = 64
?masterIdle@AudioEffect@@UEAAXXZ PROC			; AudioEffect::masterIdle, COMDAT

; 229  : {

$LN5:
	sub	rsp, 56					; 00000038H

; 230  : 	if (audioMaster)

	mov	rax, QWORD PTR [rcx+8]
	test	rax, rax
	je	SHORT $LN2@masterIdle

; 231  : 		audioMaster (&cEffect, audioMasterIdle, 0, 0, 0, 0);

	xor	r9d, r9d
	xorps	xmm0, xmm0
	movss	DWORD PTR [rsp+40], xmm0
	add	rcx, 48					; 00000030H
	and	QWORD PTR [rsp+32], 0
	xor	r8d, r8d
	lea	edx, QWORD PTR [r9+3]
	call	rax
$LN2@masterIdle:

; 232  : }

	add	rsp, 56					; 00000038H
	ret	0
?masterIdle@AudioEffect@@UEAAXXZ ENDP			; AudioEffect::masterIdle
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?__isInputConnectedDeprecated@AudioEffect@@UEAA_NH@Z
_TEXT	SEGMENT
this$ = 64
input$ = 72
?__isInputConnectedDeprecated@AudioEffect@@UEAA_NH@Z PROC ; AudioEffect::__isInputConnectedDeprecated, COMDAT

; 236  : {

$LN5:
	sub	rsp, 56					; 00000038H

; 237  : 	VstInt32 ret = 0;
; 238  : 	if (audioMaster)

	mov	r10, QWORD PTR [rcx+8]
	xor	eax, eax
	test	r10, r10
	je	SHORT $LN2@isInputCon

; 239  : 		ret = (VstInt32)audioMaster (&cEffect, DECLARE_VST_DEPRECATED (audioMasterPinConnected), input, 0, 0, 0);

	xorps	xmm0, xmm0
	mov	r8d, edx
	movss	DWORD PTR [rsp+40], xmm0
	lea	edx, QWORD PTR [rax+4]
	and	QWORD PTR [rsp+32], rax
	add	rcx, 48					; 00000030H
	xor	r9d, r9d
	call	r10
$LN2@isInputCon:

; 240  : 	return ret ? false : true;		// return value is 0 for true

	test	eax, eax
	sete	al

; 241  : }

	add	rsp, 56					; 00000038H
	ret	0
?__isInputConnectedDeprecated@AudioEffect@@UEAA_NH@Z ENDP ; AudioEffect::__isInputConnectedDeprecated
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?__isOutputConnectedDeprecated@AudioEffect@@UEAA_NH@Z
_TEXT	SEGMENT
this$ = 64
output$ = 72
?__isOutputConnectedDeprecated@AudioEffect@@UEAA_NH@Z PROC ; AudioEffect::__isOutputConnectedDeprecated, COMDAT

; 245  : {

$LN5:
	sub	rsp, 56					; 00000038H

; 246  : 	VstInt32 ret = 0;
; 247  : 	if (audioMaster)

	mov	r10, QWORD PTR [rcx+8]
	xor	eax, eax
	test	r10, r10
	je	SHORT $LN2@isOutputCo

; 248  : 		ret = (VstInt32)audioMaster (&cEffect, DECLARE_VST_DEPRECATED (audioMasterPinConnected), output, 1, 0, 0);

	xorps	xmm0, xmm0
	lea	r9d, QWORD PTR [rax+1]
	movss	DWORD PTR [rsp+40], xmm0
	mov	r8d, edx
	and	QWORD PTR [rsp+32], rax
	lea	edx, QWORD PTR [rax+4]
	add	rcx, 48					; 00000030H
	call	r10
$LN2@isOutputCo:

; 249  : 	return ret ? false : true;		// return value is 0 for true

	test	eax, eax
	sete	al

; 250  : }

	add	rsp, 56					; 00000038H
	ret	0
?__isOutputConnectedDeprecated@AudioEffect@@UEAA_NH@Z ENDP ; AudioEffect::__isOutputConnectedDeprecated
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?setParameterAutomated@AudioEffect@@UEAAXHM@Z
_TEXT	SEGMENT
this$ = 80
index$ = 88
value$ = 96
?setParameterAutomated@AudioEffect@@UEAAXHM@Z PROC	; AudioEffect::setParameterAutomated, COMDAT

; 265  : {

$LN5:
	mov	QWORD PTR [rsp+8], rbx
	push	rdi
	sub	rsp, 64					; 00000040H

; 266  : 	setParameter (index, value);

	mov	rax, QWORD PTR [rcx]
	mov	edi, edx
	movaps	XMMWORD PTR [rsp+48], xmm6
	mov	rbx, rcx
	movaps	xmm6, xmm2
	call	QWORD PTR [rax+80]

; 267  : 	if (audioMaster)

	mov	rax, QWORD PTR [rbx+8]
	test	rax, rax
	je	SHORT $LN2@setParamet

; 268  : 		audioMaster (&cEffect, audioMasterAutomate, index, 0, 0, value);	// value is in opt

	movss	DWORD PTR [rsp+40], xmm6
	lea	rcx, QWORD PTR [rbx+48]
	and	QWORD PTR [rsp+32], 0
	xor	r9d, r9d
	mov	r8d, edi
	xor	edx, edx
	call	rax
$LN2@setParamet:

; 269  : }

	mov	rbx, QWORD PTR [rsp+80]
	movaps	xmm6, XMMWORD PTR [rsp+48]
	add	rsp, 64					; 00000040H
	pop	rdi
	ret	0
?setParameterAutomated@AudioEffect@@UEAAXHM@Z ENDP	; AudioEffect::setParameterAutomated
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?__hasVuDeprecated@AudioEffect@@UEAAX_N@Z
_TEXT	SEGMENT
this$ = 8
state$ = 16
?__hasVuDeprecated@AudioEffect@@UEAAX_N@Z PROC		; AudioEffect::__hasVuDeprecated, COMDAT

; 275  : {

	mov	r8d, DWORD PTR [rcx+104]

; 276  : 	if (state)
; 277  : 		cEffect.flags |= DECLARE_VST_DEPRECATED (effFlagsHasVu);
; 278  : 	else
; 279  : 		cEffect.flags &= ~DECLARE_VST_DEPRECATED (effFlagsHasVu);
; 280  : }

	mov	eax, r8d
	and	eax, -5
	or	r8d, 4
	test	dl, dl
	cmove	r8d, eax
	mov	DWORD PTR [rcx+104], r8d
	ret	0
?__hasVuDeprecated@AudioEffect@@UEAAX_N@Z ENDP		; AudioEffect::__hasVuDeprecated
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?__hasClipDeprecated@AudioEffect@@UEAAX_N@Z
_TEXT	SEGMENT
this$ = 8
state$ = 16
?__hasClipDeprecated@AudioEffect@@UEAAX_N@Z PROC	; AudioEffect::__hasClipDeprecated, COMDAT

; 284  : {

	mov	r8d, DWORD PTR [rcx+104]

; 285  : 	if (state)
; 286  : 		cEffect.flags |= DECLARE_VST_DEPRECATED (effFlagsHasClip);
; 287  : 	else
; 288  : 		cEffect.flags &= ~DECLARE_VST_DEPRECATED (effFlagsHasClip);
; 289  : }

	mov	eax, r8d
	and	eax, -3
	or	r8d, 2
	test	dl, dl
	cmove	r8d, eax
	mov	DWORD PTR [rcx+104], r8d
	ret	0
?__hasClipDeprecated@AudioEffect@@UEAAX_N@Z ENDP	; AudioEffect::__hasClipDeprecated
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?__canMonoDeprecated@AudioEffect@@UEAAX_N@Z
_TEXT	SEGMENT
this$ = 8
state$ = 16
?__canMonoDeprecated@AudioEffect@@UEAAX_N@Z PROC	; AudioEffect::__canMonoDeprecated, COMDAT

; 293  : {

	mov	r8d, DWORD PTR [rcx+104]

; 294  : 	if (state)
; 295  : 		cEffect.flags |= DECLARE_VST_DEPRECATED (effFlagsCanMono);
; 296  : 	else
; 297  : 		cEffect.flags &= ~DECLARE_VST_DEPRECATED (effFlagsCanMono);
; 298  : }

	mov	eax, r8d
	and	eax, -9
	or	r8d, 8
	test	dl, dl
	cmove	r8d, eax
	mov	DWORD PTR [rcx+104], r8d
	ret	0
?__canMonoDeprecated@AudioEffect@@UEAAX_N@Z ENDP	; AudioEffect::__canMonoDeprecated
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?canProcessReplacing@AudioEffect@@UEAAX_N@Z
_TEXT	SEGMENT
this$ = 8
state$ = 16
?canProcessReplacing@AudioEffect@@UEAAX_N@Z PROC	; AudioEffect::canProcessReplacing, COMDAT

; 307  : {

	mov	r8d, DWORD PTR [rcx+104]

; 308  : 	if (state)
; 309  : 		cEffect.flags |= effFlagsCanReplacing;
; 310  : 	else
; 311  : 		cEffect.flags &= ~effFlagsCanReplacing;
; 312  : }

	mov	eax, r8d
	and	eax, -17
	or	r8d, 16
	test	dl, dl
	cmove	r8d, eax
	mov	DWORD PTR [rcx+104], r8d
	ret	0
?canProcessReplacing@AudioEffect@@UEAAX_N@Z ENDP	; AudioEffect::canProcessReplacing
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?canDoubleReplacing@AudioEffect@@UEAAX_N@Z
_TEXT	SEGMENT
this$ = 8
state$ = 16
?canDoubleReplacing@AudioEffect@@UEAAX_N@Z PROC		; AudioEffect::canDoubleReplacing, COMDAT

; 322  : {

	mov	r8d, DWORD PTR [rcx+104]

; 323  : 	if (state)
; 324  : 		cEffect.flags |= effFlagsCanDoubleReplacing;
; 325  : 	else
; 326  : 		cEffect.flags &= ~effFlagsCanDoubleReplacing;
; 327  : }

	mov	eax, r8d
	btr	eax, 12
	bts	r8d, 12
	test	dl, dl
	cmove	r8d, eax
	mov	DWORD PTR [rcx+104], r8d
	ret	0
?canDoubleReplacing@AudioEffect@@UEAAX_N@Z ENDP		; AudioEffect::canDoubleReplacing
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?programsAreChunks@AudioEffect@@UEAAX_N@Z
_TEXT	SEGMENT
this$ = 8
state$ = 16
?programsAreChunks@AudioEffect@@UEAAX_N@Z PROC		; AudioEffect::programsAreChunks, COMDAT

; 337  : {

	mov	r8d, DWORD PTR [rcx+104]

; 338  : 	if (state)
; 339  : 		cEffect.flags |= effFlagsProgramChunks;
; 340  : 	else
; 341  : 		cEffect.flags &= ~effFlagsProgramChunks;
; 342  : }

	mov	eax, r8d
	and	eax, -33				; ffffffffffffffdfH
	or	r8d, 32					; 00000020H
	test	dl, dl
	cmove	r8d, eax
	mov	DWORD PTR [rcx+104], r8d
	ret	0
?programsAreChunks@AudioEffect@@UEAAX_N@Z ENDP		; AudioEffect::programsAreChunks
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?__setRealtimeQualitiesDeprecated@AudioEffect@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
qualities$ = 16
?__setRealtimeQualitiesDeprecated@AudioEffect@@UEAAXH@Z PROC ; AudioEffect::__setRealtimeQualitiesDeprecated, COMDAT

; 347  : 	cEffect.DECLARE_VST_DEPRECATED (realQualities) = qualities;

	mov	DWORD PTR [rcx+132], edx

; 348  : }

	ret	0
?__setRealtimeQualitiesDeprecated@AudioEffect@@UEAAXH@Z ENDP ; AudioEffect::__setRealtimeQualitiesDeprecated
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?__setOfflineQualitiesDeprecated@AudioEffect@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
qualities$ = 16
?__setOfflineQualitiesDeprecated@AudioEffect@@UEAAXH@Z PROC ; AudioEffect::__setOfflineQualitiesDeprecated, COMDAT

; 353  : 	cEffect.DECLARE_VST_DEPRECATED (offQualities) = qualities;

	mov	DWORD PTR [rcx+136], edx

; 354  : }

	ret	0
?__setOfflineQualitiesDeprecated@AudioEffect@@UEAAXH@Z ENDP ; AudioEffect::__setOfflineQualitiesDeprecated
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?setInitialDelay@AudioEffect@@UEAAXH@Z
_TEXT	SEGMENT
this$ = 8
delay$ = 16
?setInitialDelay@AudioEffect@@UEAAXH@Z PROC		; AudioEffect::setInitialDelay, COMDAT

; 364  : 	cEffect.initialDelay = delay;

	mov	DWORD PTR [rcx+128], edx

; 365  : }

	ret	0
?setInitialDelay@AudioEffect@@UEAAXH@Z ENDP		; AudioEffect::setInitialDelay
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?dB2string@AudioEffect@@UEAAXMPEADH@Z
_TEXT	SEGMENT
this$ = 48
value$ = 56
text$ = 64
maxLen$ = 72
?dB2string@AudioEffect@@UEAAXMPEADH@Z PROC		; AudioEffect::dB2string, COMDAT

; 376  : {

$LN8:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	mov	QWORD PTR [rsp+24], rdi
	push	r14
	sub	rsp, 32					; 00000020H

; 377  : 	if (value <= 0)

	comiss	xmm1, DWORD PTR __real@00000000
	movsxd	rsi, r9d
	mov	rdi, r8
	mov	r14, rcx
	ja	SHORT $LN2@dB2string
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h

; 296  : 	char* result = strncpy (dst, src, maxLen);

	mov	r8, rsi
	lea	rdx, OFFSET FLAT:??_C@_03CNANKMHF@?9oo@
	mov	rcx, rdi
	call	QWORD PTR __imp_strncpy

; 297  : 	dst[maxLen] = 0;

	mov	BYTE PTR [rsi+rdi], 0
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp

; 378  : 		vst_strncpy (text, "-oo", maxLen);

	jmp	SHORT $LN3@dB2string
$LN2@dB2string:

; 379  : 	else
; 380  : 		float2string ((float)(20. * log10 (value)), text, maxLen);

	mov	rbx, QWORD PTR [rcx]
	xorps	xmm0, xmm0
	cvtss2sd xmm0, xmm1
	call	QWORD PTR __imp_log10
	mulsd	xmm0, QWORD PTR __real@4034000000000000
	xorps	xmm1, xmm1
	mov	r9d, esi
	mov	r8, rdi
	mov	rcx, r14
	cvtsd2ss xmm1, xmm0
	call	QWORD PTR [rbx+312]
$LN3@dB2string:

; 381  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rsi, QWORD PTR [rsp+56]
	mov	rdi, QWORD PTR [rsp+64]
	add	rsp, 32					; 00000020H
	pop	r14
	ret	0
?dB2string@AudioEffect@@UEAAXMPEADH@Z ENDP		; AudioEffect::dB2string
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?Hz2string@AudioEffect@@UEAAXMPEADH@Z
_TEXT	SEGMENT
this$ = 64
samples$ = 72
text$ = 80
maxLen$ = 88
?Hz2string@AudioEffect@@UEAAXMPEADH@Z PROC		; AudioEffect::Hz2string, COMDAT

; 390  : {

$LN7:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+16], rsi
	push	rdi
	sub	rsp, 48					; 00000030H

; 391  : 	float sampleRate = getSampleRate ();

	mov	rax, QWORD PTR [rcx]
	mov	edi, r9d
	movaps	XMMWORD PTR [rsp+32], xmm6
	mov	rsi, r8
	movaps	xmm6, xmm1
	mov	rbx, rcx
	call	QWORD PTR [rax+248]

; 392  : 	if (!samples)

	ucomiss	xmm6, DWORD PTR __real@00000000
	mov	rax, QWORD PTR [rbx]
	mov	r9d, edi
	mov	r8, rsi
	mov	rcx, rbx
	jne	SHORT $LN2@Hz2string

; 393  : 		float2string (0, text, maxLen);

	xorps	xmm1, xmm1
	jmp	SHORT $LN5@Hz2string
$LN2@Hz2string:

; 394  : 	else
; 395  : 		float2string (sampleRate / samples, text, maxLen);

	divss	xmm0, xmm6
	movaps	xmm1, xmm0
$LN5@Hz2string:

; 396  : }

	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	movaps	xmm6, XMMWORD PTR [rsp+32]
	add	rsp, 48					; 00000030H
	pop	rdi
	rex_jmp	QWORD PTR [rax+312]
?Hz2string@AudioEffect@@UEAAXMPEADH@Z ENDP		; AudioEffect::Hz2string
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?ms2string@AudioEffect@@UEAAXMPEADH@Z
_TEXT	SEGMENT
this$ = 64
samples$ = 72
text$ = 80
maxLen$ = 88
?ms2string@AudioEffect@@UEAAXMPEADH@Z PROC		; AudioEffect::ms2string, COMDAT

; 405  : {

$LN4:
	mov	rax, rsp
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rsi
	mov	QWORD PTR [rax+24], rdi
	push	r14
	sub	rsp, 48					; 00000030H

; 406  : 	float2string ((float)(samples * 1000. / getSampleRate ()), text, maxLen);

	mov	rbx, QWORD PTR [rcx]
	mov	edi, r9d
	movaps	XMMWORD PTR [rax-24], xmm6
	mov	rsi, r8
	movaps	xmm6, xmm1
	mov	r14, rcx
	mulss	xmm6, DWORD PTR __real@447a0000
	call	QWORD PTR [rbx+248]
	mov	r9d, edi
	mov	r8, rsi
	divss	xmm6, xmm0
	mov	rcx, r14
	movaps	xmm1, xmm6
	mov	rax, QWORD PTR [rbx+312]

; 407  : }

	mov	rbx, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	mov	rdi, QWORD PTR [rsp+80]
	movaps	xmm6, XMMWORD PTR [rsp+32]
	add	rsp, 48					; 00000030H
	pop	r14

; 406  : 	float2string ((float)(samples * 1000. / getSampleRate ()), text, maxLen);

	rex_jmp	rax
?ms2string@AudioEffect@@UEAAXMPEADH@Z ENDP		; AudioEffect::ms2string
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?float2string@AudioEffect@@UEAAXMPEADH@Z
_TEXT	SEGMENT
string$ = 32
this$ = 176
value$ = 184
text$ = 192
maxLen$ = 200
?float2string@AudioEffect@@UEAAXMPEADH@Z PROC		; AudioEffect::float2string, COMDAT

; 416  : {

$LN37:
	mov	rax, rsp
	mov	QWORD PTR [rax+8], rbx
	mov	QWORD PTR [rax+16], rbp
	mov	QWORD PTR [rax+24], rsi
	push	rdi
	push	r14
	push	r15
	sub	rsp, 144				; 00000090H
	movaps	XMMWORD PTR [rax-40], xmm6

; 417  : 	VstInt32 c = 0, neg = 0;

	xor	ebx, ebx
	movaps	XMMWORD PTR [rax-56], xmm7

; 418  : 	char string[32];
; 419  : 	char* s;
; 420  : 	double v, integ, i10, mantissa, m10, ten = 10.;
; 421  : 	
; 422  : 	v = (double)value;

	xorps	xmm6, xmm6
	movaps	XMMWORD PTR [rax-72], xmm8
	mov	rbp, r8
	cvtss2sd xmm6, xmm1
	movsxd	r15, r9d
	xorps	xmm8, xmm8
	movaps	XMMWORD PTR [rax-88], xmm9

; 423  : 	if (v < 0)

	comisd	xmm6, xmm8
	movaps	XMMWORD PTR [rax-104], xmm11
	jae	SHORT $LN6@float2stri

; 424  : 	{
; 425  : 		neg = 1;
; 426  : 		value = -value;
; 427  : 		v = -v;

	xorps	xmm6, QWORD PTR __xmm@80000000000000008000000000000000

; 428  : 		c++;

	mov	ebx, 1

; 429  : 		if (v > 9999999.)

	comisd	xmm6, QWORD PTR __real@416312cfe0000000
	jmp	SHORT $LN33@float2stri
$LN6@float2stri:

; 430  : 		{
; 431  : 			vst_strncpy (string, "Huge!", 31);
; 432  : 			return;
; 433  : 		}
; 434  : 	}
; 435  : 	else if (v > 99999999.)

	comisd	xmm6, QWORD PTR __real@4197d783fc000000
$LN33@float2stri:
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h

; 296  : 	char* result = strncpy (dst, src, maxLen);

	jbe	SHORT $LN9@float2stri
	mov	r8d, 31
	lea	rdx, OFFSET FLAT:??_C@_05PIHGGKHA@Huge?$CB@
	lea	rcx, QWORD PTR string$[rsp]
	call	QWORD PTR __imp_strncpy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp

; 438  : 		return;

	jmp	$LN1@float2stri
$LN9@float2stri:

; 439  : 	}
; 440  : 
; 441  : 	s = string + 31;
; 442  : 	*s-- = 0;
; 443  : 	*s-- = '.';
; 444  : 	c++;
; 445  : 	
; 446  : 	integ = floor (v);

	movaps	xmm0, xmm6
	mov	WORD PTR string$[rsp+30], 46		; 0000002eH
	mov	esi, ebx
	call	QWORD PTR __imp_floor

; 447  : 	i10 = fmod (integ, ten);

	movsd	xmm9, QWORD PTR __real@4024000000000000
	movaps	xmm7, xmm0
	movaps	xmm1, xmm9
	call	QWORD PTR __imp_fmod

; 448  : 	*s-- = (char)((VstInt32)i10 + '0');
; 449  : 	integ /= ten;

	movsd	xmm11, QWORD PTR __real@3fb999999999999a
	lea	rdi, QWORD PTR string$[rsp+28]
	cvttsd2si eax, xmm0

; 450  : 	c++;
; 451  : 	while (integ >= 1. && c < 8)

	mov	r14d, 8
	add	al, 48					; 00000030H
	mov	BYTE PTR string$[rsp+29], al
	add	ebx, 2
	jmp	SHORT $LN35@float2stri
$LL2@float2stri:
	cmp	ebx, r14d
	jge	SHORT $LN3@float2stri

; 452  : 	{
; 453  : 		i10 = fmod (integ, ten);

	movaps	xmm1, xmm9
	movaps	xmm0, xmm7
	call	QWORD PTR __imp_fmod

; 454  : 		*s-- = (char)((VstInt32)i10 + '0');

	cvttsd2si eax, xmm0
	add	al, 48					; 00000030H
	mov	BYTE PTR [rdi], al
	dec	rdi

; 455  : 		integ /= ten;
; 456  : 		c++;

	inc	ebx
$LN35@float2stri:

; 450  : 	c++;
; 451  : 	while (integ >= 1. && c < 8)

	mulsd	xmm7, xmm11
	comisd	xmm7, QWORD PTR __real@3ff0000000000000
	jae	SHORT $LL2@float2stri
$LN3@float2stri:

; 457  : 	}
; 458  : 	if (neg)

	test	esi, esi
	je	SHORT $LN10@float2stri

; 459  : 		*s-- = '-';

	mov	BYTE PTR [rdi], 45			; 0000002dH
	dec	rdi
$LN10@float2stri:

; 460  : 	vst_strncpy (text, s + 1, maxLen);

	lea	rdx, QWORD PTR [rdi+1]
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h

; 296  : 	char* result = strncpy (dst, src, maxLen);

	mov	r8, r15
	mov	rcx, rbp
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp

; 460  : 	vst_strncpy (text, s + 1, maxLen);

	mov	rsi, r15
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h

; 296  : 	char* result = strncpy (dst, src, maxLen);

	call	QWORD PTR __imp_strncpy

; 297  : 	dst[maxLen] = 0;

	mov	BYTE PTR [r15+rbp], 0
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp

; 461  : 	if (c >= 8)

	cmp	ebx, r14d
	jge	SHORT $LN1@float2stri

; 462  : 		return;
; 463  : 
; 464  : 	s = string + 31;
; 465  : 	*s-- = 0;
; 466  : 	mantissa = fmod (v, 1.);

	movsd	xmm1, QWORD PTR __real@3ff0000000000000
	lea	rdi, QWORD PTR string$[rsp+30]
	movaps	xmm0, xmm6
	mov	BYTE PTR string$[rsp+31], 0
	call	QWORD PTR __imp_fmod

; 467  : 	mantissa *= pow (ten, (double)(8 - c));

	sub	r14d, ebx
	movaps	xmm6, xmm0
	movaps	xmm0, xmm9
	movd	xmm1, r14d
	cvtdq2pd xmm1, xmm1
	call	QWORD PTR __imp_pow
	mulsd	xmm6, xmm0
	movsxd	r15, r14d
$LL4@float2stri:

; 468  : 	while (c < 8)
; 469  : 	{
; 470  : 		if (mantissa <= 0)

	comisd	xmm6, xmm8
	mov	rbx, rdi
	ja	SHORT $LN12@float2stri

; 471  : 			*s-- = '0';

	mov	al, 48					; 00000030H
	jmp	SHORT $LN13@float2stri
$LN12@float2stri:

; 472  : 		else
; 473  : 		{
; 474  : 			m10 = fmod (mantissa, ten);

	movaps	xmm1, xmm9
	movaps	xmm0, xmm6
	call	QWORD PTR __imp_fmod

; 475  : 			*s-- = (char)((VstInt32)m10 + '0');

	cvttsd2si eax, xmm0

; 476  : 			mantissa /= 10.;

	mulsd	xmm6, xmm11
	add	al, 48					; 00000030H
$LN13@float2stri:

; 477  : 		}
; 478  : 		c++;

	mov	BYTE PTR [rdi], al
	dec	rdi
	sub	r15, 1
	jne	SHORT $LL4@float2stri
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h

; 306  : 	char* result = strncat (dst, src, maxLen);

	mov	r8, rsi
	mov	rdx, rbx
	mov	rcx, rbp
	call	QWORD PTR __imp_strncat

; 307  : 	dst[maxLen] = 0;

	mov	BYTE PTR [rsi+rbp], r15b
$LN1@float2stri:
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp

; 481  : }

	movaps	xmm7, XMMWORD PTR [rsp+112]
	lea	r11, QWORD PTR [rsp+144]
	mov	rbx, QWORD PTR [r11+32]
	mov	rbp, QWORD PTR [r11+40]
	mov	rsi, QWORD PTR [r11+48]
	movaps	xmm6, XMMWORD PTR [r11-16]
	movaps	xmm8, XMMWORD PTR [r11-48]
	movaps	xmm9, XMMWORD PTR [r11-64]
	movaps	xmm11, XMMWORD PTR [r11-80]
	mov	rsp, r11
	pop	r15
	pop	r14
	pop	rdi
	ret	0
?float2string@AudioEffect@@UEAAXMPEADH@Z ENDP		; AudioEffect::float2string
_TEXT	ENDS
; Function compile flags: /Ogspy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp
;	COMDAT ?int2string@AudioEffect@@UEAAXHPEADH@Z
_TEXT	SEGMENT
this$ = 48
temp$1 = 56
value$ = 56
text$ = 64
maxLen$ = 72
?int2string@AudioEffect@@UEAAXHPEADH@Z PROC		; AudioEffect::int2string, COMDAT

; 490  : {

$LN24:
	mov	QWORD PTR [rsp+8], rbx
	mov	QWORD PTR [rsp+24], rbp
	mov	QWORD PTR [rsp+32], rsi
	push	rdi
	sub	rsp, 32					; 00000020H
	mov	rdi, r8
	movsxd	rsi, r9d

; 491  : 	if (value >= 100000000)

	mov	ebp, 100000000				; 05f5e100H
	mov	ebx, edx
	mov	r8, rsi
	mov	rcx, rdi
	cmp	edx, ebp
	jl	SHORT $LN5@int2string
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h

; 296  : 	char* result = strncpy (dst, src, maxLen);

	lea	rdx, OFFSET FLAT:??_C@_05PIHGGKHA@Huge?$CB@
	call	QWORD PTR __imp_strncpy

; 297  : 	dst[maxLen] = 0;

	mov	BYTE PTR [rsi+rdi], 0
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp

; 494  : 		return;

	jmp	SHORT $LN3@int2string
$LN5@int2string:

; 495  : 	}
; 496  : 
; 497  : 	if (value < 0)

	test	ebx, ebx
	jns	SHORT $LN6@int2string
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h

; 296  : 	char* result = strncpy (dst, src, maxLen);

	lea	rdx, OFFSET FLAT:??_C@_01JOAMLHOP@?9@
	call	QWORD PTR __imp_strncpy
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp

; 500  : 		value = -value;

	neg	ebx

; 501  : 	}

	jmp	SHORT $LN7@int2string
$LN6@int2string:
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h

; 296  : 	char* result = strncpy (dst, src, maxLen);

	lea	rdx, OFFSET FLAT:??_C@_00CNPNBAHC@@
	call	QWORD PTR __imp_strncpy
$LN7@int2string:
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp

; 505  : 	bool state = false;

	mov	BYTE PTR [rsi+rdi], 0
	xor	r8b, r8b
$LL4@int2string:

; 507  : 	{
; 508  : 		VstInt32 digit = value / div;

	mov	eax, ebx
	cdq
	idiv	ebp

; 509  : 		value -= digit * div;

	mov	ecx, eax
	imul	ecx, ebp
	sub	ebx, ecx

; 510  : 		if (state || digit > 0)

	test	r8b, r8b
	jne	SHORT $LN9@int2string
	test	eax, eax
	jle	SHORT $LN2@int2string
$LN9@int2string:

; 512  : 			char temp[2] = {static_cast<char>('0' + (char)digit), '\0'};

	add	al, 48					; 00000030H
	mov	BYTE PTR temp$1[rsp+1], 0
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h

; 306  : 	char* result = strncat (dst, src, maxLen);

	mov	r8, rsi
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp

; 512  : 			char temp[2] = {static_cast<char>('0' + (char)digit), '\0'};

	mov	BYTE PTR temp$1[rsp], al
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h

; 306  : 	char* result = strncat (dst, src, maxLen);

	lea	rdx, QWORD PTR temp$1[rsp]
	mov	rcx, rdi
	call	QWORD PTR __imp_strncat
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp

; 514  : 			state = true;

	mov	r8b, 1
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\pluginterfaces\vst2.x\aeffect.h

; 307  : 	dst[maxLen] = 0;

	mov	BYTE PTR [rsi+rdi], 0
$LN2@int2string:
; File E:\FoxSuite\shimmer\vst-2.4-sdk\vstsdk2.4\public.sdk\source\vst2.x\audioeffect.cpp

; 506  : 	for (VstInt32 div = 100000000; div >= 1; div /= 10)

	mov	eax, -858993459				; cccccccdH
	mul	ebp
	mov	ebp, edx
	shr	ebp, 3
	cmp	ebp, 1
	jge	SHORT $LL4@int2string
$LN3@int2string:

; 515  : 		}
; 516  : 	}
; 517  : }

	mov	rbx, QWORD PTR [rsp+48]
	mov	rbp, QWORD PTR [rsp+64]
	mov	rsi, QWORD PTR [rsp+72]
	add	rsp, 32					; 00000020H
	pop	rdi
	ret	0
?int2string@AudioEffect@@UEAAXHPEADH@Z ENDP		; AudioEffect::int2string
_TEXT	ENDS
END
